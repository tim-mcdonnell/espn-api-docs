{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ESPN API Documentation - NCAA Men's Basketball","text":"<p>Welcome to the comprehensive documentation for ESPN's NCAA Men's Basketball API. This documentation will help you understand and utilize the various endpoints available for accessing game data, team information, player statistics, and more.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>API Base URL</p> <p>The base URL for all endpoints is: <pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre></p>"},{"location":"#authentication","title":"Authentication","text":"<p>The documented endpoints are publicly accessible and don't require authentication for basic usage. However, rate limiting may apply.</p>"},{"location":"#request-format","title":"Request Format","text":"<p>All endpoints accept standard HTTP GET requests and return JSON responses.</p>"},{"location":"#documentation-structure","title":"Documentation Structure","text":"<p>This documentation is organized into the following sections:</p>"},{"location":"#core-endpoints","title":"Core Endpoints","text":"<ul> <li>Season Endpoints - Season, week, and calendar information</li> <li>Team Endpoints - Team data, rosters, and statistics</li> <li>Athlete Endpoints - Player information and statistics</li> <li>Event Endpoints - Game data, play-by-play, and competitions</li> <li>Ranking Endpoints - AP polls and other ranking systems</li> <li>Award Endpoints - Player and coach awards and honors</li> </ul>"},{"location":"#reference","title":"Reference","text":"<ul> <li>Data Structures - Common data structures and patterns</li> <li>Status Codes - API response codes and error handling</li> <li>Query Parameters - Common query parameters</li> </ul>"},{"location":"#common-query-parameters","title":"Common Query Parameters","text":"<p>Many endpoints support the following parameters:</p> Parameter Type Description Example <code>lang</code> String Language code for localized content <code>?lang=en</code> <code>region</code> String Regional localization <code>?region=us</code> <code>limit</code> Integer Number of items per page <code>?limit=100</code> <code>page</code> Integer Page number for paginated results <code>?page=2</code>"},{"location":"#feedback-and-support","title":"Feedback and Support","text":"<p>If you have feedback about this documentation or questions about the API, please reach out to the ESPN developer team.</p>"},{"location":"endpoints/","title":"ESPN API Endpoints - NCAA Men's Basketball","text":"<p>This section contains detailed documentation for all available endpoints in the ESPN API for NCAA Men's Basketball. These endpoints provide access to a wide range of data, from team and player information to game results, statistics, and more.</p>"},{"location":"endpoints/#base-url","title":"Base URL","text":"<p>All API endpoints use the following base URL:</p> <pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/#available-endpoints","title":"Available Endpoints","text":"<p>The API is organized into several logical categories of endpoints:</p>"},{"location":"endpoints/#athlete-endpoints","title":"Athlete Endpoints","text":"<p>Athlete endpoints provide access to information about individual players, including:</p> <ul> <li>Basic player information and profiles</li> <li>Career and season statistics</li> <li>Athlete performance in specific games</li> <li>Player projections and historical data</li> </ul>"},{"location":"endpoints/#event-endpoints","title":"Event Endpoints","text":"<p>Event endpoints retrieve information about games and matchups, including:</p> <ul> <li>Game details and summaries</li> <li>Play-by-play data</li> <li>Box scores and statistics</li> <li>Game calendars and schedules</li> </ul>"},{"location":"endpoints/#team-endpoints","title":"Team Endpoints","text":"<p>Team endpoints provide information about college basketball teams, including:</p> <ul> <li>Team rosters and details</li> <li>Team statistics and records</li> <li>Team schedules and results</li> <li>Historical team data</li> </ul>"},{"location":"endpoints/#season-endpoints","title":"Season Endpoints","text":"<p>Season endpoints access season-specific information, including:</p> <ul> <li>Season details and dates</li> <li>Season types (regular season, postseason)</li> <li>Weekly schedules</li> <li>Season statistics</li> </ul>"},{"location":"endpoints/#rankings-endpoints","title":"Rankings Endpoints","text":"<p>Rankings endpoints provide access to various poll and ranking data:</p> <ul> <li>AP Top 25 poll</li> <li>Coaches poll</li> <li>Selection committee rankings</li> <li>Historical ranking data</li> </ul>"},{"location":"endpoints/#awards-endpoints","title":"Awards Endpoints","text":"<p>Awards endpoints retrieve information about individual and team accolades:</p> <ul> <li>Player of the Year awards</li> <li>All-American teams</li> <li>Conference awards</li> <li>Historical award winners</li> </ul>"},{"location":"endpoints/#common-response-patterns","title":"Common Response Patterns","text":"<p>All endpoints follow consistent patterns for responses:</p> <ol> <li>Direct data endpoints return the requested resource directly</li> <li>Collection endpoints return paginated lists of items</li> <li>Reference endpoints return links to related resources</li> </ol>"},{"location":"endpoints/#authentication","title":"Authentication","text":"<p>Most endpoints in this API are publicly accessible without authentication. However, some data may be limited or require specific permissions.</p>"},{"location":"endpoints/#rate-limiting","title":"Rate Limiting","text":"<p>To ensure service stability, API requests are subject to rate limiting. For more information, see the Rate Limiting guide.</p>"},{"location":"endpoints/#next-steps","title":"Next Steps","text":"<p>For detailed information about specific endpoints, select a category from the navigation menu or links above. Each endpoint documentation includes:</p> <ul> <li>URL structure and parameters</li> <li>Response format and field descriptions</li> <li>Example requests and responses</li> <li>Usage notes and limitations </li> </ul>"},{"location":"endpoints/athletes/","title":"Athlete Endpoints","text":"<p>This document provides detailed information about athlete-related endpoints in the ESPN API for NCAA Men's Basketball.</p>"},{"location":"endpoints/athletes/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/athletes/#basic-athlete-information","title":"Basic Athlete Information","text":""},{"location":"endpoints/athletes/#get-athlete-details","title":"Get Athlete Details","text":"<pre><code>GET /athletes/{athlete_id}\n</code></pre> <p>Retrieves detailed information about a specific athlete.</p> <p>Path Parameters: - <code>athlete_id</code> (required): The unique identifier for the athlete.</p> <p>Response Fields: - <code>id</code>: Unique identifier for the athlete - <code>uid</code>: Universal identifier with format \"s:40<sub>l:41</sub>a:{athlete_id}\" - <code>guid</code>: Global unique identifier - <code>type</code>: Sport type (e.g., \"basketball\") - <code>alternateIds</code>: Object containing alternate identifiers - <code>firstName</code>: Athlete's first name - <code>lastName</code>: Athlete's last name - <code>fullName</code>: Athlete's full name - <code>displayName</code>: Name displayed in UI - <code>shortName</code>: Shortened name (typically \"F. Lastname\") - <code>weight</code>: Athlete's weight in pounds - <code>height</code>: Athlete's height in inches - <code>dateOfBirth</code>: ISO 8601 formatted date of birth - <code>age</code>: Athlete's age in years - <code>slug</code>: URL-friendly identifier - <code>jersey</code>: Jersey number - <code>position</code>: Position information - <code>linked</code>: Boolean indicating if the athlete is linked to other data - <code>college</code>: Reference to college information - <code>headshot</code>: Reference to headshot image - <code>teams</code>: List of teams the athlete has been on - <code>injuries</code>: List of injuries the athlete has had - <code>statistics</code>: Reference to statistics information - <code>status</code>: Current status (active, injured, etc.)</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137?lang=en&amp;region=us\",\n  \"id\": \"4433137\",\n  \"uid\": \"s:40~l:41~a:4433137\",\n  \"guid\": \"9a0fb84c-85b5-47b2-b877-d44ff3a5c93f\",\n  \"type\": \"basketball\",\n  \"alternateIds\": {\n    \"sdr\": \"1145881\"\n  },\n  \"firstName\": \"Zach\",\n  \"lastName\": \"Edey\",\n  \"fullName\": \"Zach Edey\",\n  \"displayName\": \"Zach Edey\",\n  \"shortName\": \"Z. Edey\",\n  \"weight\": 305,\n  \"height\": 87,\n  \"displayHeight\": \"7' 3\\\"\",\n  \"dateOfBirth\": \"2002-05-14T04:00Z\",\n  \"jersey\": \"15\",\n  \"position\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/positions/1?lang=en&amp;region=us\",\n    \"id\": \"1\",\n    \"name\": \"Center\",\n    \"displayName\": \"Center\",\n    \"abbreviation\": \"C\",\n    \"leaf\": true\n  },\n  \"headshot\": {\n    \"href\": \"https://a.espncdn.com/i/headshots/mens-college-basketball/players/full/4433137.png\",\n    \"alt\": \"Zach Edey\"\n  },\n  \"teams\": [\n    {\n      \"id\": \"2509\",\n      \"uid\": \"s:40~l:41~t:2509\",\n      \"slug\": \"purdue-boilermakers\",\n      \"location\": \"Purdue\",\n      \"name\": \"Boilermakers\",\n      \"abbreviation\": \"PUR\",\n      \"displayName\": \"Purdue Boilermakers\",\n      \"shortDisplayName\": \"Boilermakers\",\n      \"color\": \"9E928E\",\n      \"alternateColor\": \"000000\",\n      \"href\": \"https://api.espn.com/v1/sports/basketball/mens-college-basketball/teams/2509\"\n    }\n  ],\n  \"links\": [\n    {\n      \"language\": \"en-US\",\n      \"rel\": [\"playercard\", \"desktop\", \"athlete\"],\n      \"href\": \"https://www.espn.com/mens-college-basketball/player/_/id/4433137/zach-edey\",\n      \"text\": \"Player Card\",\n      \"shortText\": \"Player Card\",\n      \"isExternal\": false,\n      \"isPremium\": false\n    }\n  ],\n  \"injuries\": []\n}\n</code></pre></p>"},{"location":"endpoints/athletes/#athlete-statistics","title":"Athlete Statistics","text":""},{"location":"endpoints/athletes/#get-athlete-statistics","title":"Get Athlete Statistics","text":"<pre><code>GET /athletes/{athlete_id}/statistics/0\n</code></pre> <p>Retrieves comprehensive statistics for a specific athlete.</p> <p>Path Parameters: - <code>athlete_id</code> (required): The unique identifier for the athlete.</p> <p>Response Fields: - <code>categories</code>: Array of statistical categories   - <code>name</code>: Name of the category (e.g., \"offensive\", \"defensive\")   - <code>displayName</code>: Display name for the category   - <code>abbreviation</code>: Standard abbreviation   - <code>stats</code>: Array of statistics within this category</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137/statistics/0\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137/statistics/0?lang=en&amp;region=us\",\n  \"id\": \"0\",\n  \"name\": \"Career\",\n  \"abbreviation\": \"Career\",\n  \"categories\": [\n    {\n      \"name\": \"offensive\",\n      \"displayName\": \"Offensive\",\n      \"abbreviation\": \"OFF\",\n      \"stats\": [\n        {\n          \"name\": \"pts\",\n          \"displayName\": \"Points\",\n          \"shortDisplayName\": \"Pts\",\n          \"description\": \"Points\",\n          \"abbreviation\": \"Pts\",\n          \"type\": \"points\",\n          \"value\": 23.2,\n          \"displayValue\": \"23.2\"\n        },\n        {\n          \"name\": \"fg%\",\n          \"displayName\": \"Field Goal Percentage\",\n          \"shortDisplayName\": \"FG%\",\n          \"description\": \"Field Goal Percentage\",\n          \"abbreviation\": \"FG%\",\n          \"type\": \"fieldGoalPercentage\",\n          \"value\": 62.1,\n          \"displayValue\": \"62.1\"\n        },\n        {\n          \"name\": \"orpg\",\n          \"displayName\": \"Offensive Rebounds Per Game\",\n          \"shortDisplayName\": \"ORPG\",\n          \"description\": \"Offensive Rebounds Per Game\",\n          \"abbreviation\": \"ORPG\",\n          \"type\": \"reboundsOffensive\",\n          \"value\": 4.0,\n          \"displayValue\": \"4.0\"\n        }\n      ]\n    },\n    {\n      \"name\": \"defensive\",\n      \"displayName\": \"Defensive\",\n      \"abbreviation\": \"DEF\",\n      \"stats\": [\n        {\n          \"name\": \"drpg\",\n          \"displayName\": \"Defensive Rebounds Per Game\",\n          \"shortDisplayName\": \"DRPG\",\n          \"description\": \"Defensive Rebounds Per Game\",\n          \"abbreviation\": \"DRPG\",\n          \"type\": \"reboundsDefensive\",\n          \"value\": 8.8,\n          \"displayValue\": \"8.8\"\n        },\n        {\n          \"name\": \"rpg\",\n          \"displayName\": \"Rebounds Per Game\",\n          \"shortDisplayName\": \"RPG\",\n          \"description\": \"Rebounds Per Game\",\n          \"abbreviation\": \"RPG\",\n          \"type\": \"rebounds\",\n          \"value\": 12.8,\n          \"displayValue\": \"12.8\"\n        },\n        {\n          \"name\": \"bpg\",\n          \"displayName\": \"Blocks Per Game\",\n          \"shortDisplayName\": \"BPG\",\n          \"description\": \"Blocks Per Game\",\n          \"abbreviation\": \"BPG\",\n          \"type\": \"blocks\",\n          \"value\": 2.2,\n          \"displayValue\": \"2.2\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/athletes/#get-athlete-statistics-log","title":"Get Athlete Statistics Log","text":"<pre><code>GET /athletes/{athlete_id}/statisticslog\n</code></pre> <p>Returns a history of statistics for a specific athlete across multiple seasons.</p> <p>Path Parameters: - <code>athlete_id</code> (required): The unique identifier for the athlete.</p> <p>Response Structure: - <code>count</code>: Total number of seasons with statistics - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of season statistics references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137/statisticslog\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 4,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"season\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024?lang=en&amp;region=us\",\n        \"year\": 2024,\n        \"displayName\": \"2023-24\"\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/2509?lang=en&amp;region=us\"\n      },\n      \"statistics\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/2/athletes/4433137/statistics?lang=en&amp;region=us\"\n      }\n    },\n    {\n      \"season\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2023?lang=en&amp;region=us\",\n        \"year\": 2023,\n        \"displayName\": \"2022-23\"\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2023/teams/2509?lang=en&amp;region=us\"\n      },\n      \"statistics\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2023/types/2/athletes/4433137/statistics?lang=en&amp;region=us\"\n      }\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/athletes/#season-specific-athlete-information","title":"Season-Specific Athlete Information","text":""},{"location":"endpoints/athletes/#get-athlete-details-for-a-season","title":"Get Athlete Details for a Season","text":"<pre><code>GET /seasons/{year}/athletes/{athlete_id}\n</code></pre> <p>Retrieves information about a specific athlete for a particular season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>athlete_id</code> (required): The unique identifier for the athlete</p> <p>Response Structure: Similar to the basic athlete endpoint, but with season-specific data.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/athletes/4433137\" | jq\n</code></pre></p>"},{"location":"endpoints/athletes/#get-season-specific-athlete-statistics","title":"Get Season-Specific Athlete Statistics","text":"<pre><code>GET /seasons/{year}/types/{type}/athletes/{athlete_id}/statistics\n</code></pre> <p>Retrieves statistics for a specific athlete in a particular season and season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason) - <code>athlete_id</code> (required): The unique identifier for the athlete</p> <p>Response Structure: Similar to the athlete statistics endpoint, but filtered to the specified season and season type.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/2/athletes/4433137/statistics\" | jq\n</code></pre></p>"},{"location":"endpoints/athletes/#get-athlete-projections","title":"Get Athlete Projections","text":"<pre><code>GET /seasons/{year}/types/{type}/athletes/{athlete_id}/projections\n</code></pre> <p>Retrieves statistical projections for an athlete in a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>athlete_id</code> (required): The unique identifier for the athlete</p> <p>Response Structure: Similar to the statistics endpoint, but contains projected values rather than actual statistics.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/athletes/4433137/projections\" | jq\n</code></pre></p>"},{"location":"endpoints/athletes/#get-athlete-event-log","title":"Get Athlete Event Log","text":"<pre><code>GET /seasons/{year}/athletes/{athlete_id}/eventlog\n</code></pre> <p>Returns a list of events (games) that an athlete has participated in during a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>athlete_id</code> (required): The unique identifier for the athlete</p> <p>Response Structure: - <code>count</code>: Total number of events - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of event references with athlete-specific performance data</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/athletes/4433137/eventlog\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 33,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 2,\n  \"items\": [\n    {\n      \"event\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661?lang=en&amp;region=us\"\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/2509?lang=en&amp;region=us\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"MIN\",\n          \"displayValue\": \"30\"\n        },\n        {\n          \"name\": \"FG\",\n          \"displayValue\": \"14-18\"\n        },\n        {\n          \"name\": \"3PT\",\n          \"displayValue\": \"0-0\"\n        },\n        {\n          \"name\": \"FT\",\n          \"displayValue\": \"5-7\"\n        },\n        {\n          \"name\": \"OREB\",\n          \"displayValue\": \"5\"\n        },\n        {\n          \"name\": \"DREB\",\n          \"displayValue\": \"10\"\n        },\n        {\n          \"name\": \"REB\",\n          \"displayValue\": \"15\"\n        },\n        {\n          \"name\": \"AST\",\n          \"displayValue\": \"0\"\n        },\n        {\n          \"name\": \"STL\",\n          \"displayValue\": \"0\"\n        },\n        {\n          \"name\": \"BLK\",\n          \"displayValue\": \"3\"\n        },\n        {\n          \"name\": \"TO\",\n          \"displayValue\": \"5\"\n        },\n        {\n          \"name\": \"PF\",\n          \"displayValue\": \"2\"\n        },\n        {\n          \"name\": \"PTS\",\n          \"displayValue\": \"33\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/athletes/#get-athlete-notes","title":"Get Athlete Notes","text":"<pre><code>GET /seasons/{year}/athletes/{athlete_id}/notes\n</code></pre> <p>Returns notes and important information about an athlete for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>athlete_id</code> (required): The unique identifier for the athlete</p> <p>Response Structure: - <code>count</code>: Total number of notes - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of note objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes/4433137/notes\" | jq\n</code></pre></p>"},{"location":"endpoints/awards/","title":"Award Endpoints","text":"<p>This document provides detailed information about the NCAA Men's Basketball award-related endpoints in the ESPN v2 API.</p>"},{"location":"endpoints/awards/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/awards/#league-awards-endpoint","title":"League Awards Endpoint","text":""},{"location":"endpoints/awards/#awards","title":"<code>/awards</code>","text":"<p>Returns a list of all award categories defined for the league.</p> <p>Response Structure: - <code>count</code>: Total number of award categories - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award category references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 19,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/2?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/3?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/awards/#award-detail-endpoint","title":"Award Detail Endpoint","text":""},{"location":"endpoints/awards/#awardsaward_id","title":"<code>/awards/{award_id}</code>","text":"<p>Returns information about a specific award category.</p> <p>Path Parameters: - <code>award_id</code> (required): The unique identifier for the award category</p> <p>Response Fields: - <code>id</code>: Unique identifier for the award - <code>name</code>: Full name of the award (e.g., \"Player of the Year\") - <code>displayName</code>: Display name used for UI presentation - <code>shortDisplayName</code>: Shortened display name - <code>description</code>: Description of the award criteria - <code>recipients</code>: Information about historical recipients of the award</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/1\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/1?lang=en&amp;region=us\",\n  \"id\": \"1\",\n  \"name\": \"Player of the Year\",\n  \"displayName\": \"Player of the Year\",\n  \"shortDisplayName\": \"POY\",\n  \"description\": \"Annual award given to the top player in NCAA Men's Basketball\",\n  \"recipients\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/1/recipients?lang=en&amp;region=us\"\n  }\n}\n</code></pre></p>"},{"location":"endpoints/awards/#award-recipients-endpoint","title":"Award Recipients Endpoint","text":""},{"location":"endpoints/awards/#awardsaward_idrecipients","title":"<code>/awards/{award_id}/recipients</code>","text":"<p>Returns a list of athletes who have received a specific award across multiple seasons.</p> <p>Path Parameters: - <code>award_id</code> (required): The unique identifier for the award category</p> <p>Response Structure: - <code>count</code>: Total number of recipients - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award recipient objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/awards/1/recipients\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 15,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"athlete\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4395628?lang=en&amp;region=us\"\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/teams/258?lang=en&amp;region=us\"\n      },\n      \"year\": 2024,\n      \"seasonType\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/2?lang=en&amp;region=us\"\n      }\n    },\n    {\n      \"athlete\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137?lang=en&amp;region=us\"\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/teams/2305?lang=en&amp;region=us\"\n      },\n      \"year\": 2023,\n      \"seasonType\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2023/types/2?lang=en&amp;region=us\"\n      }\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/awards/#season-awards-endpoint","title":"Season Awards Endpoint","text":""},{"location":"endpoints/awards/#seasonsyearawards","title":"<code>/seasons/{year}/awards</code>","text":"<p>Returns a list of awards given for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>count</code>: Total number of award categories - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award references for the specified season</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/awards\" | jq\n</code></pre></p>"},{"location":"endpoints/awards/#team-awards-endpoint","title":"Team Awards Endpoint","text":""},{"location":"endpoints/awards/#seasonsyearteamsteam_idawards","title":"<code>/seasons/{year}/teams/{team_id}/awards</code>","text":"<p>Returns awards received by a specific team in a given season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of awards received by the team - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award references received by the team</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/awards\" | jq\n</code></pre></p>"},{"location":"endpoints/awards/#common-award-ids","title":"Common Award IDs","text":"<p>The following are common award IDs in NCAA Men's Basketball:</p> ID Award Name 1 Player of the Year 2 Coach of the Year 3 All-American First Team 4 All-American Second Team 5 All-American Third Team 6 Freshman of the Year 7 Defensive Player of the Year 8 Most Improved Player 9 Sixth Man of the Year 10 All-Conference First Team 11 All-Conference Second Team 12 All-Conference Third Team 13 All-Conference Defensive Team 14 All-Conference Freshman Team 15 Conference Player of the Year 16 Conference Coach of the Year 17 Conference Defensive Player of the Year 18 Conference Freshman of the Year 19 Conference Sixth Man of the Year"},{"location":"endpoints/awards/#data-availability","title":"Data Availability","text":"<p>Award data may not be available until officially announced for a given season. The league awards structure defines the categories, while the season-specific awards endpoints contain the actual winners for each year.</p>"},{"location":"endpoints/awards/#awards-data-structure","title":"Awards Data Structure","text":"<p>League Awards Response: - <code>count</code>: Total number of available award categories - <code>pageIndex</code>: Current page index (when paginated) - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of references to specific award categories</p> <p>Award Detail Response: - <code>id</code>: Unique identifier for the award - <code>name</code>: Full name of the award (e.g., \"Player of the Year\") - <code>displayName</code>: Display name used for UI presentation - <code>shortDisplayName</code>: Shortened display name - <code>description</code>: Description of the award criteria - <code>recipients</code>: Reference to award recipients across seasons</p> <p>Award Recipients Response: - <code>count</code>: Total number of recipients - <code>pageIndex</code>: Current page index - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of recipient objects   - <code>athlete</code>: Reference to the athlete who received the award   - <code>team</code>: Reference to the team the athlete represented   - <code>year</code>: Season year when the award was given   - <code>seasonType</code>: Season type (typically Regular Season) </p>"},{"location":"endpoints/events/","title":"Event Endpoints","text":"<p>This document provides detailed information about event-related endpoints in the ESPN API for NCAA Men's Basketball. Events represent games and related data.</p>"},{"location":"endpoints/events/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/events/#event-information","title":"Event Information","text":""},{"location":"endpoints/events/#get-event-details","title":"Get Event Details","text":"<pre><code>GET /events/{event_id}\n</code></pre> <p>Retrieves detailed information about a specific event (game).</p> <p>Path Parameters: - <code>event_id</code> (required): The unique identifier for the event.</p> <p>Response Fields: - <code>id</code>: Unique identifier for the event - <code>uid</code>: Universal identifier with format \"s:40<sub>l:41</sub>e:{event_id}\" - <code>date</code>: ISO 8601 formatted date and time of the event - <code>name</code>: Event name (typically \"{away_team} at {home_team}\") - <code>shortName</code>: Shortened event name - <code>season</code>: Reference to season information - <code>seasonType</code>: Reference to season type information - <code>week</code>: Reference to week information (if applicable) - <code>competitions</code>: Array of competition objects   - <code>id</code>: Competition identifier   - <code>date</code>: Competition date and time   - <code>attendance</code>: Number of attendees   - <code>venue</code>: Venue information   - <code>broadcasts</code>: Broadcast information   - <code>competitors</code>: Array of team information   - <code>status</code>: Game status information   - <code>notes</code>: Array of notes about the game   - <code>headlines</code>: Game headlines   - <code>leaders</code>: Statistical leaders for the game   - <code>format</code>: Game format information   - <code>startDate</code>: ISO 8601 formatted start date and time   - <code>geoBroadcasts</code>: Geographic broadcast information   - <code>headlines</code>: News headlines related to the game   - <code>series</code>: Series information (if part of a series)   - <code>tickets</code>: Ticket availability information   - <code>odds</code>: Betting odds   - <code>conference</code>: Conference information</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661?lang=en&amp;region=us\",\n  \"id\": \"401524661\",\n  \"uid\": \"s:40~l:41~e:401524661\",\n  \"date\": \"2024-01-10T00:00Z\",\n  \"name\": \"Nebraska Cornhuskers at Purdue Boilermakers\",\n  \"shortName\": \"NEB @ PUR\",\n  \"season\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024?lang=en&amp;region=us\",\n    \"year\": 2024,\n    \"type\": 2,\n    \"slug\": \"regular-season\"\n  },\n  \"competitions\": [\n    {\n      \"id\": \"401524661\",\n      \"uid\": \"s:40~l:41~e:401524661~c:401524661\",\n      \"date\": \"2024-01-10T00:00Z\",\n      \"attendance\": 14876,\n      \"venue\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/venues/4103?lang=en&amp;region=us\",\n        \"id\": \"4103\",\n        \"fullName\": \"Mackey Arena\",\n        \"address\": {\n          \"city\": \"West Lafayette\",\n          \"state\": \"IN\"\n        },\n        \"capacity\": 14804,\n        \"indoor\": true\n      },\n      \"broadcasts\": [\n        {\n          \"type\": {\n            \"id\": \"1\",\n            \"shortName\": \"TV\"\n          },\n          \"market\": {\n            \"id\": \"1\",\n            \"type\": \"National\"\n          },\n          \"media\": {\n            \"shortName\": \"BTN\"\n          },\n          \"lang\": \"en\",\n          \"region\": \"us\"\n        }\n      ],\n      \"competitors\": [\n        {\n          \"id\": \"2509\",\n          \"uid\": \"s:40~l:41~t:2509\",\n          \"type\": \"team\",\n          \"order\": 0,\n          \"homeAway\": \"home\",\n          \"winner\": true,\n          \"team\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/2509?lang=en&amp;region=us\",\n            \"id\": \"2509\",\n            \"uid\": \"s:40~l:41~t:2509\",\n            \"slug\": \"purdue-boilermakers\",\n            \"location\": \"Purdue\",\n            \"name\": \"Boilermakers\",\n            \"abbreviation\": \"PUR\",\n            \"displayName\": \"Purdue Boilermakers\",\n            \"shortDisplayName\": \"Boilermakers\",\n            \"color\": \"9E928E\",\n            \"alternateColor\": \"000000\",\n            \"logo\": \"https://a.espncdn.com/i/teamlogos/ncaa/500/2509.png\"\n          },\n          \"score\": \"87\",\n          \"records\": [\n            {\n              \"type\": \"total\",\n              \"summary\": \"15-2\",\n              \"displayValue\": \"15-2\"\n            },\n            {\n              \"type\": \"home\",\n              \"summary\": \"9-0\",\n              \"displayValue\": \"9-0\"\n            },\n            {\n              \"type\": \"road\",\n              \"summary\": \"4-1\",\n              \"displayValue\": \"4-1\"\n            }\n          ],\n          \"statistics\": []\n        },\n        {\n          \"id\": \"158\",\n          \"uid\": \"s:40~l:41~t:158\",\n          \"type\": \"team\",\n          \"order\": 1,\n          \"homeAway\": \"away\",\n          \"winner\": false,\n          \"team\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/158?lang=en&amp;region=us\",\n            \"id\": \"158\",\n            \"uid\": \"s:40~l:41~t:158\",\n            \"slug\": \"nebraska-cornhuskers\",\n            \"location\": \"Nebraska\",\n            \"name\": \"Cornhuskers\",\n            \"abbreviation\": \"NEB\",\n            \"displayName\": \"Nebraska Cornhuskers\",\n            \"shortDisplayName\": \"Cornhuskers\",\n            \"color\": \"E41C38\",\n            \"alternateColor\": \"FFFFFF\",\n            \"logo\": \"https://a.espncdn.com/i/teamlogos/ncaa/500/158.png\"\n          },\n          \"score\": \"80\",\n          \"records\": [\n            {\n              \"type\": \"total\",\n              \"summary\": \"13-4\",\n              \"displayValue\": \"13-4\"\n            },\n            {\n              \"type\": \"home\",\n              \"summary\": \"12-1\",\n              \"displayValue\": \"12-1\"\n            },\n            {\n              \"type\": \"road\",\n              \"summary\": \"1-3\",\n              \"displayValue\": \"1-3\"\n            }\n          ],\n          \"statistics\": []\n        }\n      ],\n      \"notes\": [],\n      \"status\": {\n        \"type\": {\n          \"id\": \"3\",\n          \"name\": \"STATUS_FINAL\",\n          \"description\": \"Final\",\n          \"detail\": \"Final\",\n          \"shortDetail\": \"Final\"\n        },\n        \"displayClock\": \"0:00\",\n        \"period\": 2,\n        \"clock\": 0\n      },\n      \"headlines\": [\n        {\n          \"description\": \"\u2014 Zach Edey scored 15 of his 33 points in the first half, Fletcher Loyer finished with 13 points and No. 1 Purdue held off Nebraska for an 87-80 victory Tuesday night.\",\n          \"type\": \"Game Recap\",\n          \"shortLinkText\": \"Zach Edey scored 15 of his 33 points in the first half, Fletcher Loyer finished with 13 points and No. 1 Purdue held off Nebraska\"\n        }\n      ]\n    }\n  ],\n  \"links\": [\n    {\n      \"language\": \"en-US\",\n      \"rel\": [\"summary\", \"desktop\", \"event\"],\n      \"href\": \"https://www.espn.com/mens-college-basketball/game/_/gameId/401524661\",\n      \"text\": \"Gamecast\",\n      \"shortText\": \"Gamecast\",\n      \"isExternal\": false,\n      \"isPremium\": false\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/events/#get-event-summary","title":"Get Event Summary","text":"<pre><code>GET /events/{event_id}/summary\n</code></pre> <p>Retrieves a summary of the event including scoring, play-by-play, and other key details.</p> <p>Path Parameters: - <code>event_id</code> (required): The unique identifier for the event.</p> <p>Response Fields: Includes various references to data structures that provide a summary of the event, such as: - <code>plays</code>: Play-by-play data - <code>boxscore</code>: Box score statistics - <code>leaders</code>: Statistical leaders for the game - <code>format</code>: Game format information - <code>gameInfo</code>: General information about the game - <code>scoring</code>: Scoring by period - <code>standings</code>: Current team standings - <code>videos</code>: Associated video content</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661/summary\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#event-box-score","title":"Event Box Score","text":""},{"location":"endpoints/events/#get-event-box-score","title":"Get Event Box Score","text":"<pre><code>GET /events/{event_id}/competitions/{competition_id}/competitors/{team_id}/statistics\n</code></pre> <p>Retrieves detailed box score statistics for a specific team in an event.</p> <p>Path Parameters: - <code>event_id</code> (required): The unique identifier for the event - <code>competition_id</code> (required): The competition identifier (typically the same as the event_id) - <code>team_id</code> (required): The identifier for the team</p> <p>Response Structure: Contains detailed statistics grouped by category (e.g., scoring, rebounding, etc.) for both teams or a specific team.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661/competitions/401524661/competitors/2509/statistics\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#play-by-play-data","title":"Play-by-Play Data","text":""},{"location":"endpoints/events/#get-event-play-by-play","title":"Get Event Play-by-Play","text":"<pre><code>GET /events/{event_id}/playbyplay\n</code></pre> <p>Retrieves detailed play-by-play information for a specific event.</p> <p>Path Parameters: - <code>event_id</code> (required): The unique identifier for the event.</p> <p>Query Parameters: - <code>limit</code> (optional): Number of plays to return per page - <code>offset</code> (optional): Number of plays to skip</p> <p>Response Structure: - <code>count</code>: Total number of plays - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of play objects   - <code>id</code>: Play identifier   - <code>sequenceNumber</code>: Order of the play   - <code>type</code>: Type of play   - <code>text</code>: Description of the play   - <code>scoreValue</code>: Points scored on the play   - <code>team</code>: Reference to the team that performed the action   - <code>period</code>: Period in which the play occurred   - <code>clock</code>: Game clock at the time of the play   - <code>participants</code>: Array of athletes involved in the play</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661/playbyplay?limit=10\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 304,\n  \"pageIndex\": 1,\n  \"pageSize\": 10,\n  \"pageCount\": 31,\n  \"items\": [\n    {\n      \"id\": \"401524661:1\",\n      \"type\": {\n        \"id\": \"129\",\n        \"text\": \"Tip Off\",\n        \"abbreviation\": \"TIP\"\n      },\n      \"text\": \"Tipoff: Zach Edey vs. Rienk Mast (Brice Williams gains possession)\",\n      \"period\": {\n        \"number\": 1\n      },\n      \"clock\": {\n        \"displayValue\": \"20:00\"\n      },\n      \"participants\": [\n        {\n          \"athlete\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4433137?lang=en&amp;region=us\"\n          }\n        },\n        {\n          \"athlete\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4535675?lang=en&amp;region=us\"\n          }\n        },\n        {\n          \"athlete\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4588720?lang=en&amp;region=us\"\n          }\n        }\n      ],\n      \"wallclock\": \"2024-01-10T00:00:00Z\",\n      \"teamId\": 158,\n      \"sequenceNumber\": \"1\"\n    },\n    {\n      \"id\": \"401524661:2\",\n      \"type\": {\n        \"id\": \"404\",\n        \"text\": \"Missed Jump Shot\",\n        \"abbreviation\": \"MISSJUMP\"\n      },\n      \"text\": \"Brice Williams missed Three Point Jumper\",\n      \"scoreValue\": 0,\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/158?lang=en&amp;region=us\"\n      },\n      \"period\": {\n        \"number\": 1\n      },\n      \"clock\": {\n        \"displayValue\": \"19:36\"\n      },\n      \"participants\": [\n        {\n          \"athlete\": {\n            \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/athletes/4588720?lang=en&amp;region=us\"\n          }\n        }\n      ],\n      \"wallclock\": \"2024-01-10T00:00:24Z\",\n      \"teamId\": 158,\n      \"sequenceNumber\": \"2\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/events/#get-event-line-score","title":"Get Event Line Score","text":"<pre><code>GET /events/{event_id}/competitions/{competition_id}/linescore\n</code></pre> <p>Retrieves the score by period for an event.</p> <p>Path Parameters: - <code>event_id</code> (required): The unique identifier for the event - <code>competition_id</code> (required): The competition identifier (typically the same as the event_id)</p> <p>Response Structure: Contains score information broken down by period for each team.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401524661/competitions/401524661/linescore\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#season-event-lists","title":"Season Event Lists","text":""},{"location":"endpoints/events/#get-season-events","title":"Get Season Events","text":"<pre><code>GET /seasons/{year}/events\n</code></pre> <p>Retrieves a list of events for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Query Parameters: - <code>limit</code> (optional): Number of events to return per page - <code>offset</code> (optional): Number of events to skip - <code>dates</code> (optional): Date or date range in ISO format (e.g., 2024-01-10, 2024-01-10T00:00Z-2024-01-17T23:59Z)</p> <p>Response Structure: - <code>count</code>: Total number of events - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of event references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/events?dates=20240110&amp;limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#get-season-type-events","title":"Get Season Type Events","text":"<pre><code>GET /seasons/{year}/types/{type}/events\n</code></pre> <p>Retrieves a list of events for a specific season type (regular season, postseason, etc.).</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason)</p> <p>Query Parameters: Same as the season events endpoint.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/2/events?limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#get-team-events","title":"Get Team Events","text":"<pre><code>GET /seasons/{year}/teams/{team_id}/events\n</code></pre> <p>Retrieves a list of events for a specific team in a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Query Parameters: Same as the season events endpoint.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/2509/events?limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#weekly-schedule","title":"Weekly Schedule","text":""},{"location":"endpoints/events/#get-week-events","title":"Get Week Events","text":"<pre><code>GET /seasons/{year}/types/{type}/weeks/{week}/events\n</code></pre> <p>Retrieves a list of events for a specific week in a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>week</code> (required): The week number or identifier</p> <p>Query Parameters: Same as the season events endpoint.</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/2/weeks/10/events?limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#event-groups","title":"Event Groups","text":""},{"location":"endpoints/events/#get-league-calendar","title":"Get League Calendar","text":"<pre><code>GET /calendar\n</code></pre> <p>Retrieves a calendar of events grouped by date.</p> <p>Response Structure: - <code>count</code>: Total number of calendar entries - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of calendar entry objects that group events by date</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#get-conference-tournament-events","title":"Get Conference Tournament Events","text":"<pre><code>GET /seasons/{year}/types/3/groups/50/events\n</code></pre> <p>Retrieves events specific to conference tournaments during the postseason.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - Group 50 represents conference tournaments</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/3/groups/50/events?limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/events/#get-ncaa-tournament-events","title":"Get NCAA Tournament Events","text":"<pre><code>GET /seasons/{year}/types/3/groups/100/events\n</code></pre> <p>Retrieves events specific to the NCAA tournament during the postseason.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - Group 100 represents the NCAA tournament</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types/3/groups/100/events?limit=10\" | jq\n</code></pre></p>"},{"location":"endpoints/rankings/","title":"Ranking Endpoints","text":"<p>This document provides detailed information about the ranking-related endpoints in the ESPN API for NCAA Men's Basketball.</p>"},{"location":"endpoints/rankings/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/rankings/#league-rankings-endpoint","title":"League Rankings Endpoint","text":""},{"location":"endpoints/rankings/#rankings","title":"<code>/rankings</code>","text":"<p>Returns references to the latest available rankings for the current season.</p> <p>Response Structure: - <code>count</code>: Total number of ranking systems - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of references to specific ranking resources</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/rankings\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 2,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/20/rankings/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/20/rankings/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/rankings/#season-rankings-endpoint","title":"Season Rankings Endpoint","text":""},{"location":"endpoints/rankings/#seasonsyearrankings","title":"<code>/seasons/{year}/rankings</code>","text":"<p>Returns a list of all available rankings for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season (e.g., 2025)</p> <p>Response Structure: - Similar to the league rankings endpoint, but filters to the specified season</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/rankings\" | jq\n</code></pre></p>"},{"location":"endpoints/rankings/#week-rankings-endpoint","title":"Week Rankings Endpoint","text":""},{"location":"endpoints/rankings/#seasonsyeartypestypeweeksweekrankings","title":"<code>/seasons/{year}/types/{type}/weeks/{week}/rankings</code>","text":"<p>Returns a list of all ranking systems available for a specific week.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason) - <code>week</code> (required): The week number</p> <p>Response Structure: - <code>count</code>: Total number of ranking systems - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of references to specific ranking resources</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 2,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/rankings/#specific-ranking-endpoint","title":"Specific Ranking Endpoint","text":""},{"location":"endpoints/rankings/#seasonsyeartypestypeweeksweekrankingsranking_id","title":"<code>/seasons/{year}/types/{type}/weeks/{week}/rankings/{ranking_id}</code>","text":"<p>Returns detailed poll rankings for a specific ranking system, week, and season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason) - <code>week</code> (required): The week number - <code>ranking_id</code> (required): The ranking system ID</p> <p>Common Ranking IDs: - 1: Associated Press Top 25 (AP Poll) - 2: USA Today Coaches Poll</p> <p>Response Fields: - <code>id</code>: Unique identifier for the ranking system - <code>name</code>: Full name of the ranking system (e.g., \"AP Top 25\") - <code>shortName</code>: Abbreviated name (e.g., \"AP\") - <code>type</code>: Type of poll (e.g., \"student\") - <code>headline</code>: Display headline - <code>shortHeadline</code>: Short display headline - <code>pollDateTitle</code>: How poll timeframes are referenced - <code>teams</code>: Array of ranked teams - <code>others</code>: Array of teams receiving votes but not ranked in the top 25 - <code>droppedOut</code>: Array of teams that dropped out of the rankings from the previous poll</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings/1\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"id\": \"1\",\n  \"name\": \"AP Top 25\",\n  \"shortName\": \"AP\",\n  \"type\": \"student\",\n  \"headline\": \"AP Poll\",\n  \"shortHeadline\": \"AP\",\n  \"pollDateTitle\": \"week\",\n  \"teams\": [\n    {\n      \"current\": 1,\n      \"previous\": 1,\n      \"points\": 1571.0,\n      \"firstPlaceVotes\": 61,\n      \"trend\": \"-\",\n      \"record\": {\n        \"summary\": \"32-2\",\n        \"stats\": [\n          {\n            \"name\": \"wins\",\n            \"displayName\": \"Wins\",\n            \"shortDisplayName\": \"W\",\n            \"description\": \"Wins\",\n            \"abbreviation\": \"W\",\n            \"type\": \"wins\",\n            \"value\": 32.0,\n            \"displayValue\": \"32\"\n          },\n          {\n            \"name\": \"losses\",\n            \"displayName\": \"Losses\",\n            \"shortDisplayName\": \"L\",\n            \"description\": \"Losses\",\n            \"abbreviation\": \"L\",\n            \"type\": \"losses\",\n            \"value\": 2.0,\n            \"displayValue\": \"2\"\n          }\n        ]\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2?lang=en&amp;region=us\"\n      },\n      \"date\": \"2025-03-17T07:00Z\",\n      \"lastUpdated\": \"2025-03-17T21:06Z\"\n    },\n    {\n      \"current\": 2,\n      \"previous\": 2,\n      \"points\": 1502.0,\n      \"firstPlaceVotes\": 2,\n      \"trend\": \"-\",\n      \"record\": {\n        \"summary\": \"30-3\",\n        \"stats\": [\n          {\n            \"name\": \"wins\",\n            \"displayName\": \"Wins\",\n            \"shortDisplayName\": \"W\",\n            \"description\": \"Wins\",\n            \"abbreviation\": \"W\",\n            \"type\": \"wins\",\n            \"value\": 30.0,\n            \"displayValue\": \"30\"\n          },\n          {\n            \"name\": \"losses\",\n            \"displayName\": \"Losses\",\n            \"shortDisplayName\": \"L\",\n            \"description\": \"Losses\",\n            \"abbreviation\": \"L\",\n            \"type\": \"losses\",\n            \"value\": 3.0,\n            \"displayValue\": \"3\"\n          }\n        ]\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/41?lang=en&amp;region=us\"\n      },\n      \"date\": \"2025-03-17T07:00Z\",\n      \"lastUpdated\": \"2025-03-17T21:07Z\"\n    }\n  ],\n  \"others\": [\n    {\n      \"current\": 0,\n      \"previous\": 0,\n      \"points\": 107.0,\n      \"firstPlaceVotes\": 0,\n      \"trend\": \"+26\",\n      \"record\": {\n        \"summary\": \"0-0\",\n        \"stats\": []\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2181?lang=en&amp;region=us\"\n      }\n    }\n  ],\n  \"droppedOut\": [\n    {\n      \"current\": 0,\n      \"previous\": 24,\n      \"points\": 55.0,\n      \"firstPlaceVotes\": 0,\n      \"trend\": \"+24\",\n      \"record\": {\n        \"summary\": \"0-0\",\n        \"stats\": []\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/356?lang=en&amp;region=us\"\n      }\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/rankings/#rankings-data-structure-details","title":"Rankings Data Structure Details","text":""},{"location":"endpoints/rankings/#ranked-teams","title":"Ranked Teams","text":"<p>For each team in the <code>teams</code> array:</p> <ul> <li><code>current</code>: Current rank position (1-25 for ranked teams)</li> <li><code>previous</code>: Previous rank position</li> <li><code>points</code>: Poll points received</li> <li><code>firstPlaceVotes</code>: Number of first-place votes received</li> <li><code>trend</code>: Trend indicator showing movement</li> <li><code>-</code>: No change</li> <li><code>+n</code>: Moved up n positions</li> <li><code>-n</code>: Moved down n positions</li> <li><code>record</code>: Team record information</li> <li><code>summary</code>: Abbreviated record (e.g., \"32-2\")</li> <li><code>stats</code>: Detailed breakdown of record statistics</li> <li><code>team</code>: Reference to detailed team information</li> <li><code>date</code>: ISO timestamp of the ranking</li> <li><code>lastUpdated</code>: ISO timestamp when the ranking was last updated</li> </ul>"},{"location":"endpoints/rankings/#other-teams-receiving-votes","title":"Other Teams Receiving Votes","text":"<p>The <code>others</code> array contains teams that received votes but did not make the top 25. These teams have the same structure as ranked teams except their <code>current</code> value is 0.</p>"},{"location":"endpoints/rankings/#teams-that-dropped-out","title":"Teams That Dropped Out","text":"<p>The <code>droppedOut</code> array contains teams that were ranked in the previous poll but fell out of the current rankings. These teams have the same structure as ranked teams with <code>current</code> value of 0 and <code>previous</code> showing their former ranking. </p>"},{"location":"endpoints/seasons/","title":"Season Endpoints","text":"<p>This document provides detailed information about the NCAA Men's Basketball season-related endpoints in the ESPN v2 API.</p>"},{"location":"endpoints/seasons/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/seasons/#season-list-endpoint","title":"Season List Endpoint","text":""},{"location":"endpoints/seasons/#seasons","title":"<code>/seasons</code>","text":"<p>Returns a paginated list of all available seasons.</p> <p>Query Parameters: - <code>pageSize</code> (optional): Number of items per page (default: 25) - <code>pageIndex</code> (optional): Page number (default: 1)</p> <p>Response Structure: - <code>count</code>: Total number of seasons available - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of season references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 21,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#specific-season-endpoint","title":"Specific Season Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyear","title":"<code>/seasons/{year}</code>","text":"<p>Returns detailed information about a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season (e.g., 2025)</p> <p>Response Fields: - <code>$ref</code>: Reference URL to the season resource - <code>year</code>: Four-digit year identifier - <code>startDate</code>: ISO 8601 formatted season start date - <code>endDate</code>: ISO 8601 formatted season end date - <code>displayName</code>: Human-readable season name (e.g., \"2024-25\") - <code>type</code>: Object containing information about the current season type - <code>types</code>: Reference to all season types for this season</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025?lang=en&amp;region=us\",\n  \"year\": 2025,\n  \"startDate\": \"2024-07-13T07:00Z\",\n  \"endDate\": \"2025-04-09T06:59Z\",\n  \"displayName\": \"2024-25\",\n  \"type\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2?lang=en&amp;region=us\"\n  },\n  \"types\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types?lang=en&amp;region=us\"\n  }\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-types-endpoint","title":"Season Types Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypes","title":"<code>/seasons/{year}/types</code>","text":"<p>Returns a list of all season types (preseason, regular season, postseason, etc.) for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>count</code>: Total number of season types - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of season type references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 4,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/3?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/4?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#specific-season-type-endpoint","title":"Specific Season Type Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypestype","title":"<code>/seasons/{year}/types/{type}</code>","text":"<p>Returns detailed information about a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason, 4=Off Season)</p> <p>Response Fields: - <code>$ref</code>: Reference URL to the season type resource - <code>id</code>: Unique identifier for the season type - <code>type</code>: Numeric type identifier - <code>name</code>: Human-readable name of the season type - <code>abbreviation</code>: Short abbreviation for the season type - <code>startDate</code>: ISO 8601 formatted start date for this season type - <code>endDate</code>: ISO 8601 formatted end date for this season type - <code>hasGroups</code>: Boolean indicating if this season type has group information - <code>hasStandings</code>: Boolean indicating if this season type has standings - <code>hasLegs</code>: Boolean indicating if this season type has \"legs\" (rarely used in basketball) - <code>slug</code>: URL-friendly identifier</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2?lang=en&amp;region=us\",\n  \"id\": \"2\",\n  \"type\": 2,\n  \"name\": \"Regular Season\",\n  \"abbreviation\": \"reg\",\n  \"year\": 2025,\n  \"startDate\": \"2024-11-04T08:00Z\",\n  \"endDate\": \"2025-03-18T06:59Z\",\n  \"hasGroups\": true,\n  \"hasStandings\": true,\n  \"hasLegs\": false,\n  \"slug\": \"regular-season\",\n  \"weeks\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks?lang=en&amp;region=us\"\n  },\n  \"groups\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups?lang=en&amp;region=us\"\n  }\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-type-weeks-endpoint","title":"Season Type Weeks Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypestypeweeks","title":"<code>/seasons/{year}/types/{type}/weeks</code>","text":"<p>Returns a list of all weeks for a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID</p> <p>Response Structure: - <code>count</code>: Total number of weeks - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of week references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 19,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#specific-week-endpoint","title":"Specific Week Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypestypeweeksweek","title":"<code>/seasons/{year}/types/{type}/weeks/{week}</code>","text":"<p>Returns detailed information about a specific week.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>week</code> (required): The week number</p> <p>Response Fields: - <code>$ref</code>: Reference URL to the week resource - <code>id</code>: Unique identifier for the week - <code>number</code>: Week number - <code>startDate</code>: ISO 8601 formatted start date for the week - <code>endDate</code>: ISO 8601 formatted end date for the week - <code>text</code>: Display text for the week (e.g., \"Week 1\") - <code>rankings</code>: Reference to rankings for this week</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/1\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/1?lang=en&amp;region=us\",\n  \"id\": \"1\",\n  \"number\": 1,\n  \"startDate\": \"2024-11-04T08:00Z\",\n  \"endDate\": \"2024-11-11T07:59Z\",\n  \"text\": \"Week 1\",\n  \"rankings\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/1/rankings?lang=en&amp;region=us\"\n  }\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#week-rankings-endpoint","title":"Week Rankings Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypestypeweeksweekrankings","title":"<code>/seasons/{year}/types/{type}/weeks/{week}/rankings</code>","text":"<p>Returns a list of rankings (polls) for a specific week.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>week</code> (required): The week number</p> <p>Response Structure: - <code>count</code>: Total number of ranking systems - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of ranking references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 2,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/16/rankings/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#week-events-endpoint","title":"Week Events Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyeartypestypeweeksweekevents","title":"<code>/seasons/{year}/types/{type}/weeks/{week}/events</code>","text":"<p>Returns a list of events (games) scheduled for a specific week.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>week</code> (required): The week number</p> <p>Query Parameters: - <code>limit</code> (optional): Number of events to return (default: 25) - <code>groups</code> (optional): Filter by group/conference ID</p> <p>Response Structure: - <code>count</code>: Total number of events - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of event references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/weeks/1/events\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 124,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 5,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401474516?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401474517?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-athletes-endpoint","title":"Season Athletes Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearathletes","title":"<code>/seasons/{year}/athletes</code>","text":"<p>Returns a paginated list of athletes for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Query Parameters: - <code>limit</code> (optional): Number of athletes to return per page (default: 25) - <code>page</code> (optional): Page number (default: 1) - <code>groups</code> (optional): Filter by group/conference ID - <code>teams</code> (optional): Filter by team ID</p> <p>Response Structure: - <code>count</code>: Total number of athletes - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of athlete references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes?limit=10\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 5647,\n  \"pageIndex\": 1,\n  \"pageSize\": 10,\n  \"pageCount\": 565,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes/4433261?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes/4433262?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-teams-endpoint","title":"Season Teams Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearteams","title":"<code>/seasons/{year}/teams</code>","text":"<p>Returns a paginated list of teams for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Query Parameters: - <code>limit</code> (optional): Number of teams to return per page (default: 25) - <code>page</code> (optional): Page number (default: 1) - <code>groups</code> (optional): Filter by group/conference ID - <code>active</code> (optional): Filter for active teams (true/false)</p> <p>Response Structure: - <code>count</code>: Total number of teams - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of team references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams?limit=10\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 925,\n  \"pageIndex\": 1,\n  \"pageSize\": 10,\n  \"pageCount\": 93,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-power-index-endpoint","title":"Season Power Index Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearpowerindex","title":"<code>/seasons/{year}/powerindex</code>","text":"<p>Returns power index rankings for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Fields: - <code>count</code>: Total number of teams with power index rankings - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of teams per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of team power index entries</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/powerindex\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 363,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 15,\n  \"items\": [\n    {\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/127?lang=en&amp;region=us\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"bpi\",\n          \"displayName\": \"Basketball Power Index\",\n          \"shortDisplayName\": \"BPI\",\n          \"description\": \"Basketball Power Index\",\n          \"abbreviation\": \"BPI\",\n          \"value\": 13.9,\n          \"displayValue\": \"13.9\"\n        },\n        {\n          \"name\": \"rank\",\n          \"displayName\": \"Rank\",\n          \"shortDisplayName\": \"Rank\",\n          \"description\": \"Rank\",\n          \"abbreviation\": \"Rank\",\n          \"value\": 1.0,\n          \"displayValue\": \"1\"\n        },\n        {\n          \"name\": \"rankChange\",\n          \"displayName\": \"Rank Change\",\n          \"shortDisplayName\": \"Rank Chg\",\n          \"description\": \"Rank Change\",\n          \"abbreviation\": \"Rank Chg\",\n          \"value\": 0.0,\n          \"displayValue\": \"--\"\n        },\n        {\n          \"name\": \"trend\",\n          \"displayName\": \"Trend\",\n          \"shortDisplayName\": \"TREND\",\n          \"description\": \"Trend\",\n          \"abbreviation\": \"TREND\",\n          \"value\": 0.0,\n          \"displayValue\": \"EVEN\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-power-index-leaders-endpoint","title":"Season Power Index Leaders Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearpowerindexleaders","title":"<code>/seasons/{year}/powerIndex/leaders</code>","text":"<p>Returns statistical leaders based on power index categories for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>id</code>: Unique identifier for the leader category - <code>name</code>: Name of the statistic - <code>displayName</code>: Display name for the statistic - <code>shortDisplayName</code>: Abbreviated display name - <code>description</code>: Description of the statistic - <code>abbreviation</code>: Standard abbreviation - <code>leaders</code>: Array of top athletes for this statistic</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/powerIndex/leaders\" | jq\n</code></pre></p>"},{"location":"endpoints/seasons/#season-awards-endpoint","title":"Season Awards Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearawards","title":"<code>/seasons/{year}/awards</code>","text":"<p>Returns awards given for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>count</code>: Total number of award categories - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/awards\" | jq\n</code></pre></p>"},{"location":"endpoints/seasons/#calendar-endpoint","title":"Calendar Endpoint","text":""},{"location":"endpoints/seasons/#calendar","title":"<code>/calendar</code>","text":"<p>Returns calendar information for the league including key dates and schedule details.</p> <p>Response Fields: - <code>count</code>: Total number of calendar items - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of calendar type references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 4,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar/ondays?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar/offdays?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar/blacklist?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/calendar/whitelist?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/seasons/#season-futures-endpoint","title":"Season Futures Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearfutures","title":"<code>/seasons/{year}/futures</code>","text":"<p>Returns a list of futures/betting markets for the specified season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>count</code>: Total number of futures markets - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of futures market objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/futures\" | jq\n</code></pre></p>"},{"location":"endpoints/seasons/#season-rankings-endpoint","title":"Season Rankings Endpoint","text":""},{"location":"endpoints/seasons/#seasonsyearrankings","title":"<code>/seasons/{year}/rankings</code>","text":"<p>Returns a list of available rankings for the specified season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season</p> <p>Response Structure: - <code>count</code>: Total number of ranking sets - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of ranking references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/rankings\" | jq\n</code></pre></p>"},{"location":"endpoints/teams/","title":"Team Endpoints","text":"<p>This document provides detailed information about team-related endpoints in the ESPN API for NCAA Men's Basketball.</p>"},{"location":"endpoints/teams/#base-url","title":"Base URL","text":"<pre><code>https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\n</code></pre>"},{"location":"endpoints/teams/#team-list-endpoint","title":"Team List Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteams","title":"<code>/seasons/{year}/teams</code>","text":"<p>Returns a paginated list of teams for a specific season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season (e.g., 2025)</p> <p>Query Parameters: - <code>limit</code> (optional): Number of teams to return per page (default: 25) - <code>page</code> (optional): Page number (default: 1) - <code>active</code> (optional): Filter for active teams only (true/false) - <code>groups</code> (optional): Filter by group/conference ID - <code>lang</code> (optional): Language for the response (default: en) - <code>region</code> (optional): Region for the response (default: us)</p> <p>Response Structure: - <code>count</code>: Total number of teams - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of team references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams?limit=10\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 925,\n  \"pageIndex\": 1,\n  \"pageSize\": 10,\n  \"pageCount\": 93,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-detail-endpoint","title":"Team Detail Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_id","title":"<code>/seasons/{year}/teams/{team_id}</code>","text":"<p>Returns detailed information about a specific team.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Fields: - <code>id</code>: Unique identifier for the team - <code>uid</code>: Universal identifier with format \"s:40<sub>l:41</sub>t:{team_id}\" - <code>slug</code>: URL-friendly identifier - <code>location</code>: Geographic location (city/state) - <code>name</code>: Team name (mascot) - <code>nickname</code>: Alternative short name - <code>abbreviation</code>: Official abbreviation - <code>displayName</code>: Full display name (location + team name) - <code>shortDisplayName</code>: Shortened display name - <code>color</code>: Primary team color (hexadecimal) - <code>alternateColor</code>: Secondary team color (hexadecimal) - <code>isActive</code>: Boolean indicating if the team is currently active - <code>isAllStar</code>: Boolean indicating if the team is an all-star team - <code>logos</code>: Array of team logo images - <code>record</code>: Reference to team record information - <code>groups</code>: Reference to conferences/divisions the team belongs to - <code>ranks</code>: Reference to current team rankings - <code>statistics</code>: Reference to team statistics - <code>links</code>: Array of related web links - <code>franchise</code>: Reference to franchise information</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52?lang=en&amp;region=us\",\n  \"id\": \"52\",\n  \"uid\": \"s:40~l:41~t:52\",\n  \"slug\": \"north-carolina-tar-heels\",\n  \"location\": \"North Carolina\",\n  \"name\": \"Tar Heels\",\n  \"nickname\": \"UNC\",\n  \"abbreviation\": \"UNC\",\n  \"displayName\": \"North Carolina Tar Heels\",\n  \"shortDisplayName\": \"UNC\",\n  \"color\": \"7BAFD4\",\n  \"alternateColor\": \"13294B\",\n  \"isActive\": true,\n  \"isAllStar\": false,\n  \"logos\": [\n    {\n      \"href\": \"https://a.espncdn.com/i/teamlogos/ncaa/500/153.png\",\n      \"width\": 500,\n      \"height\": 500,\n      \"alt\": \"North Carolina Tar Heels\",\n      \"rel\": [\"full\", \"default\"],\n      \"lastUpdated\": \"2018-06-05T12:11Z\"\n    }\n  ],\n  \"record\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/teams/52/record?lang=en&amp;region=us\"\n  },\n  \"groups\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/groups?lang=en&amp;region=us\"\n  },\n  \"ranks\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/ranks?lang=en&amp;region=us\"\n  },\n  \"statistics\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/statistics?lang=en&amp;region=us\"\n  },\n  \"links\": [\n    {\n      \"language\": \"en-US\",\n      \"rel\": [\"clubhouse\", \"desktop\", \"team\"],\n      \"href\": \"https://www.espn.com/mens-college-basketball/team/_/id/153/north-carolina-tar-heels\",\n      \"text\": \"Clubhouse\",\n      \"shortText\": \"Clubhouse\",\n      \"isExternal\": false,\n      \"isPremium\": false\n    }\n  ],\n  \"franchise\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/franchises/153?lang=en&amp;region=us\"\n  }\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-athletes-endpoint","title":"Team Athletes Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idathletes","title":"<code>/seasons/{year}/teams/{team_id}/athletes</code>","text":"<p>Returns a paginated list of athletes on a team's roster.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Query Parameters: - <code>limit</code> (optional): Number of athletes to return per page (default: 25) - <code>page</code> (optional): Page number (default: 1)</p> <p>Response Structure: - <code>count</code>: Total number of athletes on the team - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of athlete references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/athletes\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 15,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes/4432857?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/athletes/4432858?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-events-endpoint","title":"Team Events Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idevents","title":"<code>/seasons/{year}/teams/{team_id}/events</code>","text":"<p>Returns a paginated list of events (games) for a specific team's schedule/results.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Query Parameters: - <code>limit</code> (optional): Number of events to return per page (default: 25) - <code>page</code> (optional): Page number (default: 1) - <code>seasontype</code> (optional): Filter by season type (1=Preseason, 2=Regular Season, 3=Postseason)</p> <p>Response Structure: - <code>count</code>: Total number of events - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of event references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/events?seasontype=2\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 31,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 2,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401474610?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events/401474611?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-coaches-endpoint","title":"Team Coaches Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idcoaches","title":"<code>/seasons/{year}/teams/{team_id}/coaches</code>","text":"<p>Returns a list of coaches for a specific team.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of coaches - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of coach objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/coaches\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 1,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"id\": \"305\",\n      \"firstName\": \"Hubert\",\n      \"lastName\": \"Davis\",\n      \"experience\": 3,\n      \"status\": \"active\",\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52?lang=en&amp;region=us\"\n      }\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-statistics-endpoint","title":"Team Statistics Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idstatistics","title":"<code>/seasons/{year}/teams/{team_id}/statistics</code>","text":"<p>Returns comprehensive statistical data for a specific team.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Fields: - <code>id</code>: Unique identifier for the statistics record - <code>name</code>: Name of the statistic category - <code>abbreviation</code>: Standard abbreviation - <code>categories</code>: Array of statistical categories   - <code>name</code>: Category name (e.g., \"offense\", \"defense\")   - <code>displayName</code>: Display name for the category   - <code>stats</code>: Array of specific statistics in this category</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/statistics\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/statistics?lang=en&amp;region=us\",\n  \"id\": \"52\",\n  \"name\": \"Team Statistics\",\n  \"abbreviation\": \"TEAM\",\n  \"categories\": [\n    {\n      \"name\": \"offense\",\n      \"displayName\": \"Offense\",\n      \"stats\": [\n        {\n          \"name\": \"pts\",\n          \"displayName\": \"Points\",\n          \"shortDisplayName\": \"Pts\",\n          \"description\": \"Points\",\n          \"abbreviation\": \"Pts\",\n          \"value\": 81.4,\n          \"displayValue\": \"81.4\"\n        },\n        {\n          \"name\": \"fg%\",\n          \"displayName\": \"Field Goal Percentage\",\n          \"shortDisplayName\": \"FG%\",\n          \"description\": \"Field Goal Percentage\",\n          \"abbreviation\": \"FG%\",\n          \"value\": 45.7,\n          \"displayValue\": \"45.7\"\n        }\n      ]\n    },\n    {\n      \"name\": \"defense\",\n      \"displayName\": \"Defense\",\n      \"stats\": [\n        {\n          \"name\": \"oppPts\",\n          \"displayName\": \"Opponent Points\",\n          \"shortDisplayName\": \"Opp Pts\",\n          \"description\": \"Opponent Points\",\n          \"abbreviation\": \"Opp Pts\",\n          \"value\": 72.3,\n          \"displayValue\": \"72.3\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#season-type-team-statistics-endpoint","title":"Season Type Team Statistics Endpoint","text":""},{"location":"endpoints/teams/#seasonsyeartypestypeteamsteam_idstatistics","title":"<code>/seasons/{year}/types/{type}/teams/{team_id}/statistics</code>","text":"<p>Returns statistical data for a team filtered by a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID (1=Preseason, 2=Regular Season, 3=Postseason) - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - Similar to the team statistics endpoint, but filtered to the specified season type</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/teams/52/statistics\" | jq\n</code></pre></p>"},{"location":"endpoints/teams/#team-record-endpoint","title":"Team Record Endpoint","text":""},{"location":"endpoints/teams/#seasonsyeartypestypeteamsteam_idrecord","title":"<code>/seasons/{year}/types/{type}/teams/{team_id}/record</code>","text":"<p>Returns detailed record information for a team in a specific season type.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Fields: - <code>summary</code>: Abbreviated record (e.g., \"20-10\") - <code>items</code>: Array of record type objects   - <code>summary</code>: Record summary   - <code>description</code>: Description of the record type   - <code>type</code>: Type identifier   - <code>stats</code>: Detailed statistics for this record type</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/teams/52/record\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/teams/52/record?lang=en&amp;region=us\",\n  \"summary\": \"20-10\",\n  \"stats\": [\n    {\n      \"name\": \"wins\",\n      \"displayName\": \"Wins\",\n      \"shortDisplayName\": \"W\",\n      \"description\": \"Wins\",\n      \"abbreviation\": \"W\",\n      \"type\": \"wins\",\n      \"value\": 20.0,\n      \"displayValue\": \"20\"\n    },\n    {\n      \"name\": \"losses\",\n      \"displayName\": \"Losses\",\n      \"shortDisplayName\": \"L\",\n      \"description\": \"Losses\",\n      \"abbreviation\": \"L\",\n      \"type\": \"losses\",\n      \"value\": 10.0,\n      \"displayValue\": \"10\"\n    }\n  ],\n  \"items\": [\n    {\n      \"summary\": \"20-10\",\n      \"description\": \"Total\",\n      \"type\": {\n        \"id\": \"0\",\n        \"name\": \"total\",\n        \"displayName\": \"Total\",\n        \"abbreviation\": \"Total\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"wins\",\n          \"displayName\": \"Wins\",\n          \"shortDisplayName\": \"W\",\n          \"description\": \"Wins\",\n          \"abbreviation\": \"W\",\n          \"type\": \"wins\",\n          \"value\": 20.0,\n          \"displayValue\": \"20\"\n        },\n        {\n          \"name\": \"losses\",\n          \"displayName\": \"Losses\",\n          \"shortDisplayName\": \"L\",\n          \"description\": \"Losses\",\n          \"abbreviation\": \"L\",\n          \"type\": \"losses\",\n          \"value\": 10.0,\n          \"displayValue\": \"10\"\n        }\n      ]\n    },\n    {\n      \"summary\": \"12-8\",\n      \"description\": \"Conference\",\n      \"type\": {\n        \"id\": \"1\",\n        \"name\": \"vsconf\",\n        \"displayName\": \"Conference\",\n        \"abbreviation\": \"CONF\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"wins\",\n          \"displayName\": \"Wins\",\n          \"shortDisplayName\": \"W\",\n          \"description\": \"Wins\",\n          \"abbreviation\": \"W\",\n          \"type\": \"wins\",\n          \"value\": 12.0,\n          \"displayValue\": \"12\"\n        },\n        {\n          \"name\": \"losses\",\n          \"displayName\": \"Losses\",\n          \"shortDisplayName\": \"L\",\n          \"description\": \"Losses\",\n          \"abbreviation\": \"L\",\n          \"type\": \"losses\",\n          \"value\": 8.0,\n          \"displayValue\": \"8\"\n        }\n      ]\n    },\n    {\n      \"summary\": \"12-2\",\n      \"description\": \"Home\",\n      \"type\": {\n        \"id\": \"2\",\n        \"name\": \"home\",\n        \"displayName\": \"Home\",\n        \"abbreviation\": \"HOME\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"wins\",\n          \"displayName\": \"Wins\",\n          \"shortDisplayName\": \"W\",\n          \"description\": \"Wins\",\n          \"abbreviation\": \"W\",\n          \"type\": \"wins\",\n          \"value\": 12.0,\n          \"displayValue\": \"12\"\n        },\n        {\n          \"name\": \"losses\",\n          \"displayName\": \"Losses\",\n          \"shortDisplayName\": \"L\",\n          \"description\": \"Losses\",\n          \"abbreviation\": \"L\",\n          \"type\": \"losses\",\n          \"value\": 2.0,\n          \"displayValue\": \"2\"\n        }\n      ]\n    },\n    {\n      \"summary\": \"6-6\",\n      \"description\": \"Away\",\n      \"type\": {\n        \"id\": \"3\",\n        \"name\": \"road\",\n        \"displayName\": \"Away\",\n        \"abbreviation\": \"AWAY\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"wins\",\n          \"displayName\": \"Wins\",\n          \"shortDisplayName\": \"W\",\n          \"description\": \"Wins\",\n          \"abbreviation\": \"W\",\n          \"type\": \"wins\",\n          \"value\": 6.0,\n          \"displayValue\": \"6\"\n        },\n        {\n          \"name\": \"losses\",\n          \"displayName\": \"Losses\",\n          \"shortDisplayName\": \"L\",\n          \"description\": \"Losses\",\n          \"abbreviation\": \"L\",\n          \"type\": \"losses\",\n          \"value\": 6.0,\n          \"displayValue\": \"6\"\n        }\n      ]\n    },\n    {\n      \"summary\": \"2-2\",\n      \"description\": \"Neutral\",\n      \"type\": {\n        \"id\": \"4\",\n        \"name\": \"neutral\",\n        \"displayName\": \"Neutral\",\n        \"abbreviation\": \"NEUT\"\n      },\n      \"stats\": [\n        {\n          \"name\": \"wins\",\n          \"displayName\": \"Wins\",\n          \"shortDisplayName\": \"W\",\n          \"description\": \"Wins\",\n          \"abbreviation\": \"W\",\n          \"type\": \"wins\",\n          \"value\": 2.0,\n          \"displayValue\": \"2\"\n        },\n        {\n          \"name\": \"losses\",\n          \"displayName\": \"Losses\",\n          \"shortDisplayName\": \"L\",\n          \"description\": \"Losses\",\n          \"abbreviation\": \"L\",\n          \"type\": \"losses\",\n          \"value\": 2.0,\n          \"displayValue\": \"2\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-ranks-endpoint","title":"Team Ranks Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idranks","title":"<code>/seasons/{year}/teams/{team_id}/ranks</code>","text":"<p>Returns current rankings for a specific team across various ranking systems.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of rankings - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of ranking objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/ranks\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 2,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"type\": \"AP\",\n      \"rank\": 7\n    },\n    {\n      \"type\": \"Coaches\",\n      \"rank\": 8\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#against-the-spread-ats-endpoint","title":"Against the Spread (ATS) Endpoint","text":""},{"location":"endpoints/teams/#seasonsyeartypestypeteamsteam_idats","title":"<code>/seasons/{year}/types/{type}/teams/{team_id}/ats</code>","text":"<p>Returns against-the-spread statistics for a specific team.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>type</code> (required): The season type ID - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>records</code>: Array of ATS record objects   - <code>type</code>: Record type (e.g., \"overall\", \"home\", \"away\")   - <code>summary</code>: Abbreviated record (e.g., \"15-12-3\")   - <code>winsATS</code>: Wins against the spread   - <code>lossesATS</code>: Losses against the spread   - <code>pushesATS</code>: Pushes against the spread</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/teams/52/ats\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"records\": [\n    {\n      \"type\": \"overall\",\n      \"summary\": \"15-12-3\",\n      \"winsATS\": 15,\n      \"lossesATS\": 12,\n      \"pushesATS\": 3\n    },\n    {\n      \"type\": \"home\",\n      \"summary\": \"8-5-1\",\n      \"winsATS\": 8,\n      \"lossesATS\": 5,\n      \"pushesATS\": 1\n    },\n    {\n      \"type\": \"away\",\n      \"summary\": \"5-6-1\",\n      \"winsATS\": 5,\n      \"lossesATS\": 6,\n      \"pushesATS\": 1\n    },\n    {\n      \"type\": \"neutral\",\n      \"summary\": \"2-1-1\",\n      \"winsATS\": 2,\n      \"lossesATS\": 1,\n      \"pushesATS\": 1\n    }\n  ]\n}\n</code></pre></p>"},{"location":"endpoints/teams/#team-awards-endpoint","title":"Team Awards Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idawards","title":"<code>/seasons/{year}/teams/{team_id}/awards</code>","text":"<p>Returns awards received by a specific team in a given season.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of awards - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of award references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/awards\" | jq\n</code></pre></p>"},{"location":"endpoints/teams/#team-notes-endpoint","title":"Team Notes Endpoint","text":""},{"location":"endpoints/teams/#teamsteam_idnotes","title":"<code>/teams/{team_id}/notes</code>","text":"<p>Returns notes and important information related to a specific team.</p> <p>Path Parameters: - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of notes - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of note objects</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/teams/52/notes\" | jq\n</code></pre></p>"},{"location":"endpoints/teams/#team-groups-endpoint","title":"Team Groups Endpoint","text":""},{"location":"endpoints/teams/#seasonsyearteamsteam_idgroups","title":"<code>/seasons/{year}/teams/{team_id}/groups</code>","text":"<p>Returns information about the conferences and divisions a team belongs to.</p> <p>Path Parameters: - <code>year</code> (required): The four-digit year identifier for the season - <code>team_id</code> (required): The unique identifier for the team</p> <p>Response Structure: - <code>count</code>: Total number of groups - <code>pageIndex</code>: Current page number - <code>pageSize</code>: Number of items per page - <code>pageCount</code>: Total number of pages - <code>items</code>: Array of group references</p> <p>Example Request: <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/groups\" | jq\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"count\": 2,\n  \"pageIndex\": 1,\n  \"pageSize\": 25,\n  \"pageCount\": 1,\n  \"items\": [\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/1?lang=en&amp;region=us\"\n    },\n    {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/90?lang=en&amp;region=us\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"guides/","title":"Developer Guides","text":"<p>Welcome to the ESPN API developer guides for NCAA Men's Basketball. These guides provide in-depth information and best practices to help you successfully integrate with and use the ESPN API.</p>"},{"location":"guides/#available-guides","title":"Available Guides","text":""},{"location":"guides/#getting-started","title":"Getting Started","text":"<p>The Getting Started guide walks you through the basics of working with the ESPN API, including making your first request, understanding responses, and navigating the API structure. This is the perfect place to begin if you're new to the ESPN API.</p>"},{"location":"guides/#authentication","title":"Authentication","text":"<p>The Authentication guide explains the authentication options available for the ESPN API, including public access, API key authentication, and OAuth authentication. It also covers best practices for securing credentials and handling authentication errors.</p>"},{"location":"guides/#rate-limiting","title":"Rate Limiting","text":"<p>The Rate Limiting guide details how rate limits work in the ESPN API and provides strategies for working effectively within these limits. Learn about rate limit headers, detecting rate limit errors, and implementing various techniques to avoid hitting rate limits.</p>"},{"location":"guides/#best-practices","title":"Best Practices","text":"<p>The Best Practices guide outlines recommended approaches for working with the ESPN API, including efficient API usage, resilient integration, performance optimization, security considerations, and user experience best practices.</p>"},{"location":"guides/#getting-help","title":"Getting Help","text":"<p>If you encounter any issues while working with the ESPN API, refer to the appropriate guide for troubleshooting information. Each guide includes examples and solutions for common problems.</p> <p>For additional assistance:</p> <ol> <li>Check the Reference section for detailed information about data structures, query parameters, and status codes</li> <li>Review the Endpoints documentation for specific API endpoints</li> <li>Reach out to ESPN Developer Support for any issues not addressed in the documentation </li> </ol>"},{"location":"guides/authentication/","title":"Authentication","text":"<p>This guide explains authentication options for the ESPN API for NCAA Men's Basketball data.</p>"},{"location":"guides/authentication/#public-access","title":"Public Access","text":"<p>Most NCAA Men's Basketball endpoints in the ESPN API are publicly accessible without authentication. You can make requests to these endpoints directly without any authentication token or API key.</p> <p>Example of a public endpoint request:</p> <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams\" | jq\n</code></pre>"},{"location":"guides/authentication/#access-limitations","title":"Access Limitations","text":"<p>While most data is publicly available, be aware of the following limitations:</p> <ol> <li>Rate limiting applies to all requests, including unauthenticated ones</li> <li>Some endpoints or data fields may require authentication or special permissions</li> <li>Commercial applications may require additional licensing agreements with ESPN</li> </ol>"},{"location":"guides/authentication/#authentication-methods","title":"Authentication Methods","text":"<p>If you do need to authenticate for certain endpoints or use cases, the ESPN API supports the following authentication methods:</p>"},{"location":"guides/authentication/#api-key-authentication","title":"API Key Authentication","text":"<p>For some ESPN APIs and products, API key authentication is used. If you have been provided with an API key:</p> <ol> <li>Include the key in the request headers:</li> </ol> <pre><code>curl -s -H \"X-API-Key: YOUR_API_KEY\" \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams\" | jq\n</code></pre> <ol> <li>Or append it as a query parameter:</li> </ol> <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams?apikey=YOUR_API_KEY\" | jq\n</code></pre> <p>Note</p> <p>The specific parameter name may vary based on the API product. Check your API key documentation for the exact parameter name.</p>"},{"location":"guides/authentication/#oauth-authentication","title":"OAuth Authentication","text":"<p>For applications requiring user-specific data or performing actions on behalf of users, OAuth 2.0 may be used:</p> <ol> <li>Register your application with ESPN Developer Portal</li> <li>Implement the OAuth 2.0 authorization flow to obtain access tokens</li> <li>Include the access token in request headers:</li> </ol> <pre><code>curl -s -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/user-specific-endpoint\" | jq\n</code></pre>"},{"location":"guides/authentication/#security-best-practices","title":"Security Best Practices","text":"<p>When working with authentication:</p> <ol> <li>Never expose API keys or tokens in client-side code or public repositories</li> <li>Store credentials securely using environment variables or a secure key management service</li> <li>Implement token refresh mechanisms for OAuth tokens</li> <li>Use HTTPS for all API requests</li> <li>Implement proper error handling for authentication failures</li> </ol> <p>Example of secure credential handling:</p> <pre><code>// Node.js example using environment variables\nrequire('dotenv').config(); // Load environment variables from .env file\n\nconst apiKey = process.env.ESPN_API_KEY;\nif (!apiKey) {\n  throw new Error('API key not found in environment variables');\n}\n\nasync function fetchTeams() {\n  const response = await fetch(\n    'https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams',\n    {\n      headers: {\n        'X-API-Key': apiKey\n      }\n    }\n  );\n\n  if (!response.ok) {\n    if (response.status === 401) {\n      throw new Error('Authentication failed: Invalid API key');\n    } else if (response.status === 403) {\n      throw new Error('Authentication failed: Insufficient permissions');\n    }\n    throw new Error(`API request failed with status ${response.status}`);\n  }\n\n  return await response.json();\n}\n</code></pre>"},{"location":"guides/authentication/#authentication-errors","title":"Authentication Errors","text":"<p>Common authentication-related error codes:</p> <ul> <li>401 Unauthorized: Authentication failed (invalid or missing credentials)</li> <li>403 Forbidden: Authentication succeeded but access is denied due to insufficient permissions</li> </ul> <p>Example error response for authentication failures:</p> <pre><code>{\n  \"error\": {\n    \"status\": 401,\n    \"message\": \"Authentication required\",\n    \"detail\": \"This endpoint requires valid authentication\"\n  }\n}\n</code></pre>"},{"location":"guides/authentication/#commercial-usage","title":"Commercial Usage","text":"<p>If you're developing a commercial application that uses ESPN API data:</p> <ol> <li>Review the ESPN Developer Terms of Service</li> <li>Contact ESPN licensing for commercial usage agreements</li> <li>Obtain proper authentication credentials for your approved use case</li> </ol>"},{"location":"guides/authentication/#next-steps","title":"Next Steps","text":"<ul> <li>If you're building an application that needs to handle authentication, see the Best Practices guide for implementation recommendations</li> <li>For information on managing request volume with authenticated requests, see the Rate Limiting guide</li> </ul>"},{"location":"guides/authentication/#support","title":"Support","text":"<p>If you encounter authentication issues or have questions about access requirements for specific endpoints:</p> <ol> <li>Check if the endpoint requires authentication in its documentation</li> <li>Review your authentication implementation for common issues</li> <li>Contact ESPN Developer Support for assistance with authentication problems</li> </ol> <p>Remember that most NCAA Men's Basketball data endpoints are accessible without authentication, so you can build many applications without worrying about authentication at all. </p>"},{"location":"guides/best-practices/","title":"Best Practices for the ESPN API","text":"<p>This guide outlines best practices for working with the ESPN API for NCAA Men's Basketball data. Following these recommendations will help you build more efficient, reliable, and maintainable applications.</p>"},{"location":"guides/best-practices/#efficient-api-usage","title":"Efficient API Usage","text":""},{"location":"guides/best-practices/#1-minimize-request-volume","title":"1. Minimize Request Volume","text":"<ul> <li>Batch related requests when possible instead of making many small individual requests</li> <li>Cache responses based on their expected freshness - some data (like team lists) changes infrequently</li> <li>Implement conditional requests using HTTP headers like <code>If-Modified-Since</code> or <code>If-None-Match</code> when supported</li> </ul>"},{"location":"guides/best-practices/#2-optimize-query-parameters","title":"2. Optimize Query Parameters","text":"<ul> <li>Use specific filters rather than retrieving large datasets and filtering client-side</li> <li>Limit response size by requesting only the data you need</li> <li>Use pagination effectively by adjusting the <code>limit</code> parameter based on your needs</li> </ul>"},{"location":"guides/best-practices/#3-handle-rate-limiting-gracefully","title":"3. Handle Rate Limiting Gracefully","text":"<ul> <li>Track rate limit headers in responses to monitor your usage</li> <li>Implement backoff strategies when you approach or exceed rate limits</li> <li>Distribute requests evenly over time rather than sending them in bursts</li> <li>Prioritize critical requests when working within rate limits</li> </ul>"},{"location":"guides/best-practices/#resilient-integration","title":"Resilient Integration","text":""},{"location":"guides/best-practices/#1-implement-robust-error-handling","title":"1. Implement Robust Error Handling","text":"<ul> <li>Check HTTP status codes before processing responses</li> <li>Handle 429 (Too Many Requests) errors by backing off and retrying</li> <li>Parse error responses to extract meaningful information</li> <li>Log API errors with sufficient context for troubleshooting</li> </ul> <pre><code>async function fetchWithRetry(url, options = {}, maxRetries = 3) {\n  let retries = 0;\n  while (retries &lt; maxRetries) {\n    try {\n      const response = await fetch(url, options);\n\n      // Handle rate limiting\n      if (response.status === 429) {\n        const retryAfter = response.headers.get('Retry-After') || 5;\n        await new Promise(resolve =&gt; setTimeout(resolve, retryAfter * 1000));\n        retries++;\n        continue;\n      }\n\n      // Handle other errors\n      if (!response.ok) {\n        const errorData = await response.json().catch(() =&gt; ({}));\n        throw new Error(`API error: ${response.status} ${JSON.stringify(errorData)}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (retries &gt;= maxRetries - 1) throw error;\n      retries++;\n      // Exponential backoff\n      await new Promise(resolve =&gt; setTimeout(resolve, 1000 * Math.pow(2, retries)));\n    }\n  }\n}\n</code></pre>"},{"location":"guides/best-practices/#2-design-for-api-changes","title":"2. Design for API Changes","text":"<ul> <li>Validate response data rather than assuming structure</li> <li>Build abstractions around direct API calls to isolate your application from API changes</li> <li>Version your dependencies on the API in documentation and code</li> <li>Have fallback strategies for when specific endpoints or features are unavailable</li> </ul>"},{"location":"guides/best-practices/#3-monitor-api-health","title":"3. Monitor API Health","text":"<ul> <li>Track response times to detect performance issues</li> <li>Set up alerts for unexpected error rates or outages</li> <li>Implement circuit breakers to prevent cascading failures</li> <li>Maintain an audit log of critical API interactions</li> </ul>"},{"location":"guides/best-practices/#performance-optimization","title":"Performance Optimization","text":""},{"location":"guides/best-practices/#1-efficient-data-processing","title":"1. Efficient Data Processing","text":"<ul> <li>Process data incrementally when working with large datasets through pagination</li> <li>Use streaming parsers for large JSON responses when appropriate</li> <li>Normalize and store related data to minimize redundant requests</li> </ul>"},{"location":"guides/best-practices/#2-optimize-network-usage","title":"2. Optimize Network Usage","text":"<ul> <li>Enable compression in requests (Accept-Encoding: gzip)</li> <li>Use HTTP/2 when available to reduce connection overhead</li> <li>Implement connection pooling for multiple requests</li> </ul>"},{"location":"guides/best-practices/#3-caching-strategies","title":"3. Caching Strategies","text":"<pre><code>import requests\nimport json\nimport time\nimport os\n\nclass ESPNAPIClient:\n    def __init__(self, cache_dir=\".cache\", cache_ttl=3600):\n        self.base_url = \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball\"\n        self.cache_dir = cache_dir\n        self.cache_ttl = cache_ttl\n        os.makedirs(cache_dir, exist_ok=True)\n\n    def _get_cache_path(self, endpoint):\n        import hashlib\n        cache_key = hashlib.md5(endpoint.encode()).hexdigest()\n        return os.path.join(self.cache_dir, f\"{cache_key}.json\")\n\n    def _get_cached_response(self, endpoint):\n        cache_path = self._get_cache_path(endpoint)\n        if not os.path.exists(cache_path):\n            return None\n\n        # Check if cache is expired\n        file_modified = os.path.getmtime(cache_path)\n        if time.time() - file_modified &gt; self.cache_ttl:\n            return None\n\n        with open(cache_path, 'r') as f:\n            return json.load(f)\n\n    def _cache_response(self, endpoint, data):\n        cache_path = self._get_cache_path(endpoint)\n        with open(cache_path, 'w') as f:\n            json.dump(data, f)\n\n    def get(self, endpoint, params=None, force_refresh=False):\n        # Check cache first unless forced to refresh\n        if not force_refresh:\n            cached_data = self._get_cached_response(endpoint)\n            if cached_data:\n                return cached_data\n\n        # Make the API request\n        url = f\"{self.base_url}{endpoint}\"\n        response = requests.get(url, params=params)\n        response.raise_for_status()\n        data = response.json()\n\n        # Cache the response\n        self._cache_response(endpoint, data)\n        return data\n</code></pre> <p>Consider different caching strategies for different types of data:</p> <ul> <li>Short-lived cache (minutes): Current game scores, live statistics</li> <li>Medium-lived cache (hours): Daily schedules, standings</li> <li>Long-lived cache (days): Team information, historical data</li> <li>Versioned cache: Cache data until a new version is detected</li> </ul>"},{"location":"guides/best-practices/#security-considerations","title":"Security Considerations","text":""},{"location":"guides/best-practices/#1-protect-credentials","title":"1. Protect Credentials","text":"<ul> <li>Never expose API keys in client-side code</li> <li>Use environment variables for storing sensitive configuration</li> <li>Implement proper authentication when required</li> </ul>"},{"location":"guides/best-practices/#2-validate-input-and-output","title":"2. Validate Input and Output","text":"<ul> <li>Sanitize user input before using it in API requests</li> <li>Validate API responses before processing to prevent injection attacks</li> <li>Implement content security policies for web applications</li> </ul>"},{"location":"guides/best-practices/#user-experience-best-practices","title":"User Experience Best Practices","text":""},{"location":"guides/best-practices/#1-progressive-loading","title":"1. Progressive Loading","text":"<ul> <li>Show loading indicators for data that's being fetched</li> <li>Implement progressive enhancement to display partial data while loading more</li> <li>Prioritize above-the-fold content in your loading sequence</li> </ul>"},{"location":"guides/best-practices/#2-graceful-degradation","title":"2. Graceful Degradation","text":"<ul> <li>Provide fallback content when API data is unavailable</li> <li>Cache critical data locally to support offline or degraded experiences</li> <li>Communicate API issues to users in a helpful way</li> </ul>"},{"location":"guides/best-practices/#3-performance-perception","title":"3. Performance Perception","text":"<ul> <li>Preload predictable data before users need it</li> <li>Update UI optimistically before API responses when appropriate</li> <li>Batch UI updates to prevent excessive re-rendering</li> </ul>"},{"location":"guides/best-practices/#implementation-examples","title":"Implementation Examples","text":""},{"location":"guides/best-practices/#efficient-team-data-retrieval","title":"Efficient Team Data Retrieval","text":"<pre><code>// Less efficient approach - retrieving all teams then filtering\nasync function getTeamsByConference(year, conferenceId) {\n  // Don't do this - it retrieves all teams\n  const response = await fetch(`https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/${year}/teams?limit=400`);\n  const data = await response.json();\n\n  // Client-side filtering is less efficient\n  return data.items.filter(team =&gt; team.conferenceId === conferenceId);\n}\n\n// More efficient approach - using the API's filtering capabilities\nasync function getTeamsByConference(year, conferenceId) {\n  // Use the groups endpoint to get teams by conference directly\n  const response = await fetch(`https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/${year}/groups/${conferenceId}/teams`);\n  return await response.json();\n}\n</code></pre>"},{"location":"guides/best-practices/#handling-pagination-efficiently","title":"Handling Pagination Efficiently","text":"<pre><code>// Retrieve all items across multiple pages\nasync function getAllItems(baseUrl, pageSize = 100) {\n  let allItems = [];\n  let pageIndex = 1;\n  let hasMorePages = true;\n\n  while (hasMorePages) {\n    const url = `${baseUrl}?limit=${pageSize}&amp;offset=${(pageIndex - 1) * pageSize}`;\n    const response = await fetch(url);\n    const data = await response.json();\n\n    allItems = [...allItems, ...data.items];\n\n    hasMorePages = pageIndex &lt; data.pageCount;\n    pageIndex++;\n  }\n\n  return allItems;\n}\n</code></pre>"},{"location":"guides/best-practices/#conclusion","title":"Conclusion","text":"<p>Following these best practices will help you build applications that use the ESPN API efficiently and reliably. Remember that good API citizenship benefits everyone by ensuring the service remains responsive and available.</p> <p>For further guidance, refer to: - Getting Started Guide - Rate Limiting Documentation - Authentication Guide </p>"},{"location":"guides/getting-started/","title":"Getting Started with the ESPN API","text":"<p>This guide will help you get started with using the ESPN API for NCAA Men's Basketball data. It covers the basic concepts, tools, and steps needed to begin making requests and processing responses.</p>"},{"location":"guides/getting-started/#overview","title":"Overview","text":"<p>The ESPN API provides programmatic access to NCAA Men's Basketball data, including teams, players, games, statistics, and more. The API follows REST principles, returning JSON-formatted responses that can be consumed by any programming language or tool that supports HTTP requests.</p>"},{"location":"guides/getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin using the API, you should have:</p> <ul> <li>Basic understanding of REST APIs and HTTP requests</li> <li>Familiarity with JSON data format</li> <li>A tool for making HTTP requests (curl, Postman, or your preferred programming language)</li> </ul>"},{"location":"guides/getting-started/#making-your-first-request","title":"Making Your First Request","text":"<p>Let's start by making a simple request to get information about the current NCAA Men's Basketball season.</p>"},{"location":"guides/getting-started/#using-curl","title":"Using curl","text":"<pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024\" | jq\n</code></pre>"},{"location":"guides/getting-started/#using-javascript","title":"Using JavaScript","text":"<pre><code>async function getCurrentSeason() {\n  const response = await fetch(\n    \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024\"\n  );\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\ngetCurrentSeason();\n</code></pre>"},{"location":"guides/getting-started/#using-python","title":"Using Python","text":"<pre><code>import requests\n\ndef get_current_season():\n    url = \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024\"\n    response = requests.get(url)\n    return response.json()\n\ndata = get_current_season()\nprint(data)\n</code></pre>"},{"location":"guides/getting-started/#understanding-the-response","title":"Understanding the Response","text":"<p>The API returns data in JSON format. Here's an example response from the seasons endpoint:</p> <pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024?lang=en&amp;region=us\",\n  \"id\": \"2024\",\n  \"name\": \"2023-24\",\n  \"type\": 2,\n  \"year\": 2024,\n  \"startDate\": \"2023-11-06T08:00Z\",\n  \"endDate\": \"2024-04-08T06:59Z\",\n  \"types\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types?lang=en&amp;region=us\"\n  }\n}\n</code></pre> <p>Each response provides:</p> <ul> <li>Unique identifiers for the resource</li> <li>Basic information about the resource</li> <li>References to related resources (using the <code>$ref</code> field)</li> <li>Embedded related resources when requested</li> </ul>"},{"location":"guides/getting-started/#working-with-references","title":"Working with References","text":"<p>The ESPN API uses references to link related resources. References appear as URLs in the <code>$ref</code> field or as embedded objects. You can follow these references to retrieve additional data.</p> <p>For example, to get the season types for the 2024 season:</p> <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/types\" | jq\n</code></pre>"},{"location":"guides/getting-started/#pagination","title":"Pagination","text":"<p>Endpoints that return collections of data use pagination to limit response size. Paginated responses include:</p> <ul> <li><code>count</code>: Total number of items</li> <li><code>pageIndex</code>: Current page number (starting from 1)</li> <li><code>pageSize</code>: Number of items per page</li> <li><code>pageCount</code>: Total number of pages</li> <li><code>items</code>: Array of data items for the current page</li> </ul> <p>Example request with pagination:</p> <pre><code>curl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams?limit=10&amp;offset=0\" | jq\n</code></pre> <p>To navigate through pages, adjust the <code>limit</code> and <code>offset</code> parameters: - <code>limit</code>: Number of items to return per page - <code>offset</code>: Number of items to skip</p>"},{"location":"guides/getting-started/#common-query-parameters","title":"Common Query Parameters","text":"<p>Most endpoints support these common parameters:</p> <ul> <li><code>lang</code>: Language code (e.g., <code>en</code> for English)</li> <li><code>region</code>: Region code (e.g., <code>us</code> for United States)</li> <li><code>limit</code>: Maximum number of items to return in paginated responses</li> <li><code>offset</code>: Number of items to skip in paginated responses</li> </ul>"},{"location":"guides/getting-started/#working-with-dates","title":"Working with Dates","text":"<p>When working with date-based endpoints, you can filter results using the <code>dates</code> parameter:</p> <pre><code># Get events for a specific date (January 10, 2024)\ncurl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/events?dates=20240110\" | jq\n\n# Get events for a date range (January 10-17, 2024)\ncurl -s \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/events?dates=20240110-20240117\" | jq\n</code></pre>"},{"location":"guides/getting-started/#error-handling","title":"Error Handling","text":"<p>The API returns standard HTTP status codes to indicate success or failure:</p> <ul> <li><code>200 OK</code>: Request succeeded</li> <li><code>400 Bad Request</code>: Invalid request parameters</li> <li><code>404 Not Found</code>: Resource not found</li> <li><code>429 Too Many Requests</code>: Rate limit exceeded</li> <li><code>500 Internal Server Error</code>: Server-side error</li> </ul> <p>Error responses include a JSON object with details about the error.</p>"},{"location":"guides/getting-started/#best-practices","title":"Best Practices","text":"<ol> <li>Cache responses when appropriate to reduce API calls</li> <li>Use specific endpoints rather than retrieving large datasets and filtering client-side</li> <li>Implement proper error handling to gracefully handle API errors</li> <li>Respect rate limits by implementing backoff strategies</li> <li>Keep query parameters minimal to improve response times</li> </ol>"},{"location":"guides/getting-started/#next-steps","title":"Next Steps","text":"<p>Now that you understand the basics, explore specific endpoints for:</p> <ul> <li>Teams - Get team information and statistics</li> <li>Athletes - Access player data and performance</li> <li>Events - Retrieve game details and results</li> <li>Seasons - Work with season-specific data</li> </ul> <p>For more advanced usage, check out these guides: - Authentication - Rate Limiting - Best Practices</p>"},{"location":"guides/getting-started/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Verify your request URL and parameters</li> <li>Check if you're hitting rate limits</li> <li>Ensure you're handling responses correctly</li> <li>Review the Status Codes documentation </li> </ol>"},{"location":"guides/rate-limiting/","title":"Rate Limiting","text":"<p>This guide explains how rate limiting works in the ESPN API for NCAA Men's Basketball and provides strategies for working effectively within these limits.</p>"},{"location":"guides/rate-limiting/#understanding-rate-limits","title":"Understanding Rate Limits","text":"<p>The ESPN API implements rate limiting to ensure fair usage and maintain service stability. When you exceed these limits, requests will be rejected until your quota refreshes.</p>"},{"location":"guides/rate-limiting/#rate-limit-structure","title":"Rate Limit Structure","text":"<p>Rate limits for the API are based on:</p> <ol> <li>Requests per minute (RPM): The number of requests allowed per minute</li> <li>Requests per day (RPD): The total number of requests allowed per day</li> <li>Requests per endpoint: Some specific endpoints may have their own separate limits</li> </ol> <p>Note</p> <p>Exact rate limit values are subject to change. Current limits are not published, but you can monitor your usage through response headers.</p>"},{"location":"guides/rate-limiting/#rate-limit-headers","title":"Rate Limit Headers","text":"<p>The API includes rate limit information in response headers:</p> <ul> <li><code>X-RateLimit-Limit</code>: Maximum number of requests allowed in the current period</li> <li><code>X-RateLimit-Remaining</code>: Number of requests remaining in the current period</li> <li><code>X-RateLimit-Reset</code>: Time when the current limit window resets (Unix timestamp)</li> </ul> <p>Example: <pre><code>X-RateLimit-Limit: 100\nX-RateLimit-Remaining: 87\nX-RateLimit-Reset: 1619049600\n</code></pre></p>"},{"location":"guides/rate-limiting/#handling-rate-limiting","title":"Handling Rate Limiting","text":""},{"location":"guides/rate-limiting/#detecting-rate-limit-errors","title":"Detecting Rate Limit Errors","text":"<p>When you exceed rate limits, the API will respond with:</p> <ul> <li>HTTP status code <code>429 Too Many Requests</code></li> <li>Response body with error details</li> <li><code>Retry-After</code> header indicating when to retry (in seconds)</li> </ul> <p>Example rate limit error response: <pre><code>{\n  \"error\": {\n    \"status\": 429,\n    \"message\": \"Rate limit exceeded. Please wait before making additional requests.\",\n    \"detail\": \"You have exceeded the rate limit of 100 requests per minute\"\n  }\n}\n</code></pre></p>"},{"location":"guides/rate-limiting/#best-practices-for-avoiding-rate-limits","title":"Best Practices for Avoiding Rate Limits","text":"<ol> <li>Implement caching</li> <li>Cache responses locally to reduce repeated requests</li> <li>Set appropriate cache expiration based on data volatility</li> <li> <p>Use conditional requests with <code>If-Modified-Since</code> or <code>If-None-Match</code> headers</p> </li> <li> <p>Use efficient request patterns</p> </li> <li>Batch related requests when possible</li> <li>Request only the data you need</li> <li> <p>Avoid polling endpoints at high frequencies</p> </li> <li> <p>Implement rate tracking</p> </li> <li>Monitor rate limit headers in responses</li> <li>Track your usage against limits</li> <li> <p>Slow down requests as you approach limits</p> </li> <li> <p>Space out requests</p> </li> <li>Distribute requests evenly over time</li> <li>Avoid sending bursts of concurrent requests</li> <li>Implement request queuing with controlled throughput</li> </ol>"},{"location":"guides/rate-limiting/#implementation-strategies","title":"Implementation Strategies","text":""},{"location":"guides/rate-limiting/#basic-rate-limit-handling","title":"Basic Rate Limit Handling","text":"<pre><code>async function fetchWithRateLimitHandling(url) {\n  try {\n    const response = await fetch(url);\n\n    // Track rate limit info from headers\n    const rateLimit = {\n      limit: parseInt(response.headers.get('X-RateLimit-Limit') || '0'),\n      remaining: parseInt(response.headers.get('X-RateLimit-Remaining') || '0'),\n      reset: parseInt(response.headers.get('X-RateLimit-Reset') || '0')\n    };\n\n    // Log rate limit status (optional)\n    console.log(`Rate limit: ${rateLimit.remaining}/${rateLimit.limit}`);\n\n    if (response.status === 429) {\n      const retryAfter = parseInt(response.headers.get('Retry-After') || '60');\n      console.log(`Rate limited. Retrying after ${retryAfter} seconds`);\n\n      // Wait for the specified retry time\n      await new Promise(resolve =&gt; setTimeout(resolve, retryAfter * 1000));\n\n      // Retry the request\n      return fetchWithRateLimitHandling(url);\n    }\n\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Request failed:', error);\n    throw error;\n  }\n}\n</code></pre>"},{"location":"guides/rate-limiting/#advanced-request-throttling","title":"Advanced Request Throttling","text":"<pre><code>class ThrottledApiClient {\n  constructor(options = {}) {\n    this.baseUrl = 'https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball';\n    this.requestsPerMinute = options.requestsPerMinute || 60;\n    this.requestQueue = [];\n    this.processing = false;\n\n    // Track rate limits\n    this.rateLimit = {\n      limit: Infinity,\n      remaining: Infinity,\n      reset: 0\n    };\n  }\n\n  async request(endpoint, params = {}) {\n    return new Promise((resolve, reject) =&gt; {\n      // Add to queue\n      this.requestQueue.push({\n        endpoint,\n        params,\n        resolve,\n        reject\n      });\n\n      // Start processing queue if not already processing\n      if (!this.processing) {\n        this.processQueue();\n      }\n    });\n  }\n\n  async processQueue() {\n    if (this.requestQueue.length === 0) {\n      this.processing = false;\n      return;\n    }\n\n    this.processing = true;\n\n    // Calculate delay between requests to stay under rate limit\n    const delayMs = 60000 / this.requestsPerMinute;\n\n    // If we're close to rate limit, wait until reset\n    if (this.rateLimit.remaining &lt; 5 &amp;&amp; this.rateLimit.reset &gt; 0) {\n      const waitTime = (this.rateLimit.reset * 1000) - Date.now();\n      if (waitTime &gt; 0) {\n        await new Promise(resolve =&gt; setTimeout(resolve, waitTime));\n      }\n    }\n\n    const { endpoint, params, resolve, reject } = this.requestQueue.shift();\n\n    try {\n      // Construct URL with query parameters\n      const url = new URL(`${this.baseUrl}${endpoint}`);\n      Object.keys(params).forEach(key =&gt; {\n        url.searchParams.append(key, params[key]);\n      });\n\n      // Make the request\n      const response = await fetch(url.toString());\n\n      // Update rate limit tracking\n      this.rateLimit = {\n        limit: parseInt(response.headers.get('X-RateLimit-Limit') || this.rateLimit.limit),\n        remaining: parseInt(response.headers.get('X-RateLimit-Remaining') || this.rateLimit.remaining),\n        reset: parseInt(response.headers.get('X-RateLimit-Reset') || this.rateLimit.reset)\n      };\n\n      // Handle rate limiting\n      if (response.status === 429) {\n        const retryAfter = parseInt(response.headers.get('Retry-After') || '60');\n        console.warn(`Rate limited. Waiting ${retryAfter} seconds before continuing.`);\n\n        // Put the request back in the queue\n        this.requestQueue.unshift({ endpoint, params, resolve, reject });\n\n        // Wait for the retry-after period\n        await new Promise(resolve =&gt; setTimeout(resolve, retryAfter * 1000));\n      } else if (!response.ok) {\n        const error = await response.json().catch(() =&gt; ({ message: 'Unknown error' }));\n        reject(new Error(`API error: ${response.status} - ${error.message}`));\n      } else {\n        resolve(await response.json());\n      }\n    } catch (error) {\n      reject(error);\n    }\n\n    // Wait for the calculated delay before processing next request\n    await new Promise(resolve =&gt; setTimeout(resolve, delayMs));\n\n    // Process next request\n    this.processQueue();\n  }\n}\n\n// Usage example:\nconst api = new ThrottledApiClient({ requestsPerMinute: 30 });\napi.request('/seasons/2024/teams', { limit: 50 })\n  .then(data =&gt; console.log(data))\n  .catch(error =&gt; console.error(error));\n</code></pre>"},{"location":"guides/rate-limiting/#implementing-exponential-backoff","title":"Implementing Exponential Backoff","text":"<p>When dealing with rate limits or server errors, implement exponential backoff to gradually increase wait time between retries:</p> <pre><code>import requests\nimport time\nimport random\n\ndef fetch_with_backoff(url, max_retries=5, base_delay=1):\n    retries = 0\n\n    while retries &lt; max_retries:\n        try:\n            response = requests.get(url)\n\n            # Track rate limits\n            rate_limit = {\n                'limit': int(response.headers.get('X-RateLimit-Limit', 0)),\n                'remaining': int(response.headers.get('X-RateLimit-Remaining', 0)),\n                'reset': int(response.headers.get('X-RateLimit-Reset', 0))\n            }\n\n            # Handle rate limiting\n            if response.status_code == 429:\n                retry_after = int(response.headers.get('Retry-After', base_delay))\n                print(f\"Rate limited. Retry after: {retry_after} seconds\")\n                time.sleep(retry_after)\n                retries += 1\n                continue\n\n            # Handle other errors\n            if response.status_code &gt;= 500:\n                raise Exception(f\"Server error: {response.status_code}\")\n\n            response.raise_for_status()\n            return response.json()\n\n        except Exception as e:\n            retries += 1\n\n            if retries &gt;= max_retries:\n                raise Exception(f\"Maximum retries reached: {e}\")\n\n            # Calculate exponential backoff delay\n            delay = base_delay * (2 ** retries) + random.uniform(0, 1)\n            print(f\"Retry {retries}/{max_retries} after {delay:.2f} seconds\")\n            time.sleep(delay)\n\n    raise Exception(\"Failed after maximum retries\")\n</code></pre>"},{"location":"guides/rate-limiting/#strategies-for-high-volume-applications","title":"Strategies for High-Volume Applications","text":"<p>If you need to make a large number of requests, consider these strategies:</p>"},{"location":"guides/rate-limiting/#1-distribute-across-time","title":"1. Distribute Across Time","text":"<p>For batch or background processing, distribute requests across a longer timeframe:</p> <pre><code>async function batchProcess(items, processFn, batchSize = 10, delayBetweenBatches = 60000) {\n  const batches = [];\n\n  // Split items into batches\n  for (let i = 0; i &lt; items.length; i += batchSize) {\n    batches.push(items.slice(i, i + batchSize));\n  }\n\n  // Process batches with delay between them\n  for (let i = 0; i &lt; batches.length; i++) {\n    const batch = batches[i];\n\n    // Process current batch\n    await Promise.all(batch.map(processFn));\n\n    // Wait between batches, except for the last one\n    if (i &lt; batches.length - 1) {\n      console.log(`Batch ${i+1}/${batches.length} complete. Waiting ${delayBetweenBatches/1000} seconds...`);\n      await new Promise(resolve =&gt; setTimeout(resolve, delayBetweenBatches));\n    }\n  }\n}\n\n// Example usage:\nconst teamIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\nasync function processTeam(teamId) {\n  const url = `https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/${teamId}`;\n  return fetchWithRateLimitHandling(url);\n}\n\n// Process 3 teams at a time, with 1 minute between batches\nbatchProcess(teamIds, processTeam, 3, 60000);\n</code></pre>"},{"location":"guides/rate-limiting/#2-implement-a-request-scheduler","title":"2. Implement a Request Scheduler","text":"<p>For ongoing operations, schedule requests to maintain a consistent rate:</p> <pre><code>class RequestScheduler {\n  constructor(requestsPerMinute) {\n    this.interval = 60000 / requestsPerMinute;\n    this.queue = [];\n    this.timer = null;\n  }\n\n  schedule(requestFn) {\n    return new Promise((resolve, reject) =&gt; {\n      this.queue.push({ \n        requestFn, \n        resolve, \n        reject \n      });\n\n      if (!this.timer) {\n        this.processQueue();\n      }\n    });\n  }\n\n  processQueue() {\n    if (this.queue.length === 0) {\n      this.timer = null;\n      return;\n    }\n\n    const { requestFn, resolve, reject } = this.queue.shift();\n\n    requestFn()\n      .then(resolve)\n      .catch(reject)\n      .finally(() =&gt; {\n        this.timer = setTimeout(() =&gt; {\n          this.processQueue();\n        }, this.interval);\n      });\n  }\n}\n\n// Usage\nconst scheduler = new RequestScheduler(30); // 30 requests per minute\n\nfunction fetchTeam(teamId) {\n  return scheduler.schedule(() =&gt; {\n    return fetch(`https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2024/teams/${teamId}`)\n      .then(response =&gt; response.json());\n  });\n}\n\n// Now you can call fetchTeam as needed without worrying about rate limits\n</code></pre>"},{"location":"guides/rate-limiting/#conclusion","title":"Conclusion","text":"<p>By understanding and respecting rate limits, you can build applications that interact reliably with the ESPN API. Implement appropriate strategies for your use case:</p> <ul> <li>For occasional API usage: Basic rate limit handling is sufficient</li> <li>For regular usage: Advanced throttling and caching are recommended</li> <li>For high-volume applications: Request scheduling and distribution are essential</li> </ul> <p>Remember, good API citizenship helps ensure the service remains stable and available for everyone.</p> <p>If you have questions about rate limits or need help addressing specific issues, refer to the Best Practices Guide or contact ESPN API support. </p>"},{"location":"reference/data-structures/","title":"ESPN API - Common Data Structures","text":"<p>This document provides detailed information about common data structures and patterns used throughout the ESPN v2 API for NCAA Men's Basketball.</p>"},{"location":"reference/data-structures/#basic-response-pattern","title":"Basic Response Pattern","text":"<p>Most ESPN API responses follow a consistent pattern with these common elements:</p> <ol> <li>Reference Objects with <code>$ref</code> fields</li> <li>Pagination structure for list endpoints</li> <li>Standardized field naming conventions</li> <li>Nested objects with descriptive properties</li> </ol>"},{"location":"reference/data-structures/#reference-objects","title":"Reference Objects","text":""},{"location":"reference/data-structures/#ref-structure","title":"Ref Structure","text":"<p>Many responses contain reference objects that point to more detailed information. These references use the <code>$ref</code> field with a URL to the detailed resource.</p> <pre><code>{\n  \"$ref\": \"https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025\"\n}\n</code></pre> <p>Typically, the client would need to make additional HTTP requests to resolve these references. The API is designed to be deeply navigable through these references.</p>"},{"location":"reference/data-structures/#pagination-structure","title":"Pagination Structure","text":"<p>List endpoints return paginated results with a consistent structure. The pagination information includes count, page size, current page index, and total number of pages.</p> <pre><code>{\n  \"count\": 363,         // Total number of items in the full dataset\n  \"pageIndex\": 1,       // Current page (1-based indexing)\n  \"pageSize\": 25,       // Number of items per page\n  \"pageCount\": 15,      // Total number of pages\n  \"items\": [...]        // Array of items for the current page\n}\n</code></pre> <p>Navigation</p> <p>To navigate through pages, use the <code>page</code> query parameter, for example: <code>?page=2</code></p> <p>To change the number of items per page, use the <code>limit</code> query parameter, for example: <code>?limit=50</code></p>"},{"location":"reference/data-structures/#team-object","title":"Team Object","text":"<p>Example of basic team information:</p> <pre><code>{\n  \"id\": \"52\",\n  \"uid\": \"s:40~l:41~t:52\",\n  \"slug\": \"north-carolina-tar-heels\",\n  \"location\": \"North Carolina\",\n  \"name\": \"Tar Heels\",\n  \"nickname\": \"UNC\",\n  \"abbreviation\": \"UNC\",\n  \"color\": \"7BAFD4\",\n  \"alternateColor\": \"13294B\",\n  \"logos\": [\n    {\n      \"href\": \"https://a.espncdn.com/i/teamlogos/ncaa/500/153.png\",\n      \"width\": 500,\n      \"height\": 500,\n      \"alt\": \"North Carolina Tar Heels\",\n      \"rel\": [\"full\", \"default\"]\n    }\n  ]\n}\n</code></pre>"},{"location":"reference/data-structures/#event-object","title":"Event Object","text":"<p>Example of basic event information:</p> <pre><code>{\n  \"id\": \"401478604\",\n  \"uid\": \"s:40~l:41~e:401478604\",\n  \"date\": \"2024-03-09T23:00Z\",\n  \"name\": \"Duke at North Carolina\",\n  \"shortName\": \"DUKE @ UNC\",\n  \"season\": {\n    \"year\": 2025,\n    \"type\": 2,\n    \"slug\": \"regular-season\"\n  },\n  \"competitions\": [\n    {\n      \"id\": \"401478604\",\n      \"competitors\": [\n        {\n          \"id\": \"52\",\n          \"homeAway\": \"home\"\n        },\n        {\n          \"id\": \"150\",\n          \"homeAway\": \"away\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"reference/data-structures/#rankings-data-structure","title":"Rankings Data Structure","text":"<pre><code>{\n  \"id\": \"1\",\n  \"name\": \"AP Top 25\",\n  \"shortName\": \"AP\",\n  \"type\": \"student\",\n  \"headline\": \"AP Poll\",\n  \"shortHeadline\": \"AP\",\n  \"pollDateTitle\": \"week\",\n  \"teams\": [\n    {\n      \"current\": 1,\n      \"previous\": 1,\n      \"points\": 1571.0,\n      \"firstPlaceVotes\": 61,\n      \"trend\": \"-\",\n      \"record\": {\n        \"summary\": \"32-2\",\n        \"stats\": [\n          {\n            \"name\": \"wins\",\n            \"displayName\": \"Wins\",\n            \"shortDisplayName\": \"W\",\n            \"description\": \"Wins\",\n            \"abbreviation\": \"W\",\n            \"type\": \"wins\",\n            \"value\": 32.0,\n            \"displayValue\": \"32\"\n          },\n          {\n            \"name\": \"losses\",\n            \"displayName\": \"Losses\",\n            \"shortDisplayName\": \"L\",\n            \"description\": \"Losses\",\n            \"abbreviation\": \"L\",\n            \"type\": \"losses\",\n            \"value\": 2.0,\n            \"displayValue\": \"2\"\n          }\n        ]\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2?lang=en&amp;region=us\"\n      },\n      \"date\": \"2025-03-17T07:00Z\",\n      \"lastUpdated\": \"2025-03-17T21:06Z\"\n    }\n  ],\n  \"others\": [\n    {\n      \"current\": 0,\n      \"previous\": 0,\n      \"points\": 107.0,\n      \"firstPlaceVotes\": 0,\n      \"trend\": \"+26\",\n      \"record\": {\n        \"summary\": \"0-0\",\n        \"stats\": []\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/2181?lang=en&amp;region=us\"\n      }\n    }\n  ],\n  \"droppedOut\": [\n    {\n      \"current\": 0,\n      \"previous\": 24,\n      \"points\": 55.0,\n      \"firstPlaceVotes\": 0,\n      \"trend\": \"+24\",\n      \"record\": {\n        \"summary\": \"0-0\",\n        \"stats\": []\n      },\n      \"team\": {\n        \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/356?lang=en&amp;region=us\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"reference/data-structures/#rankings-data-field-descriptions","title":"Rankings Data Field Descriptions","text":"<ul> <li><code>id</code>: Unique identifier for the ranking system</li> <li><code>name</code>: Full name of the ranking system (e.g., \"AP Top 25\")</li> <li><code>shortName</code>: Abbreviated name (e.g., \"AP\")</li> <li><code>type</code>: Type of poll (e.g., \"student\")</li> <li><code>headline</code>: Display headline</li> <li><code>shortHeadline</code>: Short display headline</li> <li><code>pollDateTitle</code>: How poll timeframes are referenced</li> <li><code>teams</code>: Array of ranked teams<ul> <li><code>current</code>: Current rank position</li> <li><code>previous</code>: Previous rank position</li> <li><code>points</code>: Poll points received</li> <li><code>firstPlaceVotes</code>: Number of first-place votes received</li> <li><code>trend</code>: Trend indicator showing movement (\"+\", \"-\", or numeric value)</li> <li><code>record</code>: Team record information<ul> <li><code>summary</code>: Abbreviated record (e.g., \"32-2\")</li> <li><code>stats</code>: Detailed breakdown of record statistics</li> </ul> </li> <li><code>team</code>: Reference to detailed team information</li> <li><code>date</code>: ISO timestamp of the ranking</li> <li><code>lastUpdated</code>: ISO timestamp when the ranking was last updated</li> </ul> </li> <li><code>others</code>: Array of teams receiving votes but not ranked in the top 25</li> <li><code>droppedOut</code>: Array of teams that dropped out of the rankings from the previous poll</li> </ul>"},{"location":"reference/data-structures/#franchise-data-structure","title":"Franchise Data Structure","text":"<pre><code>{\n  \"id\": \"1\",\n  \"uid\": \"s:40~l:41~f:1\",\n  \"slug\": \"alaska-anchorage-seawolves\",\n  \"location\": \"Alaska Anchorage\",\n  \"name\": \"Seawolves\",\n  \"nickname\": \"AK-Anchorage\",\n  \"abbreviation\": \"UAA\",\n  \"displayName\": \"Alaska Anchorage Seawolves\",\n  \"shortDisplayName\": \"AK-Anchorage\",\n  \"color\": \"000000\",\n  \"isActive\": true,\n  \"logos\": [\n    {\n      \"href\": \"https://a.espncdn.com/i/teamlogos/ncaa/500/1.png\",\n      \"width\": 500,\n      \"height\": 500,\n      \"alt\": \"\",\n      \"rel\": [\"full\", \"default\"],\n      \"lastUpdated\": \"2019-11-05T17:36Z\"\n    }\n  ],\n  \"team\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/1?lang=en&amp;region=us\"\n  },\n  \"venue\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/venues/4823?lang=en&amp;region=us\",\n    \"id\": \"4823\",\n    \"fullName\": \"Alaska Airlines Center\",\n    \"address\": {\n      \"city\": \"Anchorage\",\n      \"state\": \"AK\"\n    },\n    \"indoor\": true,\n    \"grass\": false,\n    \"images\": []\n  }\n}\n</code></pre>"},{"location":"reference/data-structures/#franchise-data-field-descriptions","title":"Franchise Data Field Descriptions","text":"<ul> <li><code>id</code>: Unique identifier for the franchise</li> <li><code>uid</code>: Universal identifier with format \"s:40<sub>l:41</sub>f:{id}\"</li> <li><code>slug</code>: URL-friendly identifier</li> <li><code>location</code>: Geographic location (usually city and/or state)</li> <li><code>name</code>: Team name (mascot)</li> <li><code>nickname</code>: Alternative short name</li> <li><code>abbreviation</code>: Official abbreviation</li> <li><code>displayName</code>: Full display name (location + team name)</li> <li><code>shortDisplayName</code>: Shortened display name</li> <li><code>color</code>: Primary team color (hexadecimal)</li> <li><code>isActive</code>: Boolean indicating if the franchise is currently active</li> <li><code>logos</code>: Array of team logo images</li> <li><code>team</code>: Reference to the current season's team record</li> <li><code>venue</code>: Information about the team's home venue</li> </ul>"},{"location":"reference/data-structures/#league-root-data-structure","title":"League Root Data Structure","text":"<pre><code>{\n  \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball?lang=en&amp;region=us\",\n  \"id\": \"41\",\n  \"guid\": \"11965179-4504-3b99-983e-83ea0e36d5f3\",\n  \"uid\": \"s:40~l:41\",\n  \"name\": \"NCAA Men's Basketball\",\n  \"displayName\": \"NCAA Men's Basketball\",\n  \"abbreviation\": \"NCAAM\",\n  \"shortName\": \"NCAAM\",\n  \"midsizeName\": \"NCAAM Basketball\",\n  \"slug\": \"mens-college-basketball\",\n  \"isTournament\": false,\n  \"season\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025?lang=en&amp;region=us\",\n    \"year\": 2025,\n    \"startDate\": \"2024-07-13T07:00Z\",\n    \"endDate\": \"2025-04-09T06:59Z\",\n    \"displayName\": \"2024-25\",\n    \"type\": {\n      \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/3?lang=en&amp;region=us\"\n    }\n  },\n  \"seasons\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons?lang=en&amp;region=us\"\n  },\n  \"franchises\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/franchises?lang=en&amp;region=us\"\n  },\n  \"teams\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams?lang=en&amp;region=us\"\n  },\n  \"events\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events?lang=en&amp;region=us\"\n  },\n  \"notes\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/notes?lang=en&amp;region=us\"\n  },\n  \"rankings\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/rankings?lang=en&amp;region=us\"\n  },\n  \"links\": [\n    {\n      \"language\": \"en-US\",\n      \"rel\": [\n        \"index\",\n        \"desktop\",\n        \"league\"\n      ],\n      \"href\": \"https://www.espn.com/mens-college-basketball/\",\n      \"text\": \"Index\",\n      \"shortText\": \"Index\",\n      \"isExternal\": false,\n      \"isPremium\": false\n    }\n  ],\n  \"logos\": [\n    {\n      \"href\": \"https://a.espncdn.com/redesign/assets/img/icons/ESPN-icon-basketball.png\",\n      \"width\": 500,\n      \"height\": 500,\n      \"alt\": \"\",\n      \"rel\": [\n        \"full\",\n        \"default\"\n      ],\n      \"lastUpdated\": \"2021-08-03T15:56Z\"\n    }\n  ],\n  \"gender\": \"MALE\"\n}\n</code></pre>"},{"location":"reference/data-structures/#league-root-data-field-descriptions","title":"League Root Data Field Descriptions","text":"<ul> <li><code>id</code>: Unique identifier for the league</li> <li><code>guid</code>: Global unique identifier</li> <li><code>uid</code>: Universal identifier with format \"s:40~l:41\"</li> <li><code>name</code>: Full name of the league</li> <li><code>displayName</code>: Display name used for UI presentation</li> <li><code>abbreviation</code>: Standard abbreviation (e.g., \"NCAAM\")</li> <li><code>shortName</code>: Shortened display name</li> <li><code>midsizeName</code>: Medium-length display name</li> <li><code>slug</code>: URL-friendly identifier</li> <li><code>isTournament</code>: Boolean indicating if the league is a tournament format</li> <li><code>season</code>: Information about the current season</li> <li><code>seasons</code>: Reference to all available seasons</li> <li><code>franchises</code>: Reference to all franchises in the league</li> <li><code>teams</code>: Reference to teams in the current season</li> <li><code>events</code>: Reference to events/games</li> <li><code>notes</code>: Reference to league notes</li> <li><code>rankings</code>: Reference to rankings data</li> <li><code>links</code>: Array of related web links</li> <li><code>logos</code>: Array of league logo images</li> <li><code>gender</code>: Gender of the league (always \"MALE\" for men's basketball)</li> </ul>"},{"location":"reference/data-structures/#group-data-structure","title":"Group Data Structure","text":"<pre><code>{\n  \"id\": \"1\",\n  \"name\": \"Atlantic Coast\",\n  \"abbreviation\": \"ACC\",\n  \"shortName\": \"ACC\",\n  \"midsizeName\": \"ACC\",\n  \"season\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025?lang=en&amp;region=us\"\n  },\n  \"children\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/1/children?lang=en&amp;region=us\"\n  },\n  \"parent\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/90?lang=en&amp;region=us\"\n  },\n  \"standings\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/1/standings?lang=en&amp;region=us\"\n  },\n  \"isConference\": true,\n  \"slug\": \"atlantic-coast\",\n  \"teams\": {\n    \"$ref\": \"http://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/1/teams?lang=en&amp;region=us\"\n  }\n}\n</code></pre>"},{"location":"reference/data-structures/#group-data-field-descriptions","title":"Group Data Field Descriptions","text":"<ul> <li><code>id</code>: Unique identifier for the group</li> <li><code>name</code>: Full name of the group (e.g., \"Atlantic Coast\", \"NCAA Division I\", etc.)</li> <li><code>abbreviation</code>: Standard abbreviation (e.g., \"ACC\", \"NCAA\")</li> <li><code>shortName</code>: Shortened display name</li> <li><code>midsizeName</code>: Medium-length display name</li> <li><code>season</code>: Reference to the season</li> <li><code>children</code>: Reference to child groups</li> <li><code>parent</code>: Reference to the parent group</li> <li><code>standings</code>: Reference to group standings</li> <li><code>isConference</code>: Boolean indicating if the group is a conference</li> <li><code>slug</code>: URL-friendly identifier</li> <li><code>teams</code>: Reference to teams in the group </li> </ul>"},{"location":"reference/query-parameters/","title":"Common Query Parameters","text":"<p>Many ESPN API endpoints support common query parameters that allow you to filter, paginate, and customize responses. This document outlines the most frequently used query parameters across the API.</p>"},{"location":"reference/query-parameters/#pagination-parameters","title":"Pagination Parameters","text":"Parameter Type Description Example <code>limit</code> Integer Number of items to return per page. Default is typically 25. Max value varies by endpoint. <code>?limit=100</code> <code>page</code> Integer Page number to retrieve (1-based indexing). Default is 1. <code>?page=2</code>"},{"location":"reference/query-parameters/#localization-parameters","title":"Localization Parameters","text":"Parameter Type Description Example <code>lang</code> String Language code for localized content. Default is 'en' (English). <code>?lang=en</code> <code>region</code> String Regional localization. Default is 'us' (United States). <code>?region=us</code>"},{"location":"reference/query-parameters/#time-and-date-parameters","title":"Time and Date Parameters","text":"Parameter Type Description Example <code>dates</code> String Filter events by specific date(s) in YYYYMMDD format. <code>?dates=20240301</code> <code>dateRange</code> String Date range in format YYYYMMDD-YYYYMMDD. <code>?dateRange=20240301-20240315</code>"},{"location":"reference/query-parameters/#season-parameters","title":"Season Parameters","text":"Parameter Type Description Example <code>season</code> Integer Season year to retrieve data for. <code>?season=2025</code> <code>seasontype</code> Integer Filter by season type (1=Preseason, 2=Regular Season, 3=Postseason) <code>?seasontype=2</code>"},{"location":"reference/query-parameters/#team-parameters","title":"Team Parameters","text":"Parameter Type Description Example <code>teams</code> Integer Filter by team ID(s). Can be comma-separated for multiple teams. <code>?teams=52,150</code> <code>groups</code> Integer Filter by group (conference/division) ID(s). Can be comma-separated. <code>?groups=1,5</code>"},{"location":"reference/query-parameters/#filtering-parameters","title":"Filtering Parameters","text":"Parameter Type Description Example <code>active</code> Boolean Filter for active items only. <code>?active=true</code> <code>home</code> Boolean Filter for home teams. <code>?home=true</code> <code>away</code> Boolean Filter for away teams. <code>?away=true</code>"},{"location":"reference/query-parameters/#metadata-parameters","title":"Metadata Parameters","text":"Parameter Type Description Example <code>enable</code> String Enable specific features or data in the response. Comma-separated values. <code>?enable=odds,logos</code> <code>disable</code> String Disable specific features or data in the response. Comma-separated values. <code>?disable=stats,records</code>"},{"location":"reference/query-parameters/#sorting-parameters","title":"Sorting Parameters","text":"Parameter Type Description Example <code>sort</code> String Field to sort results by. <code>?sort=name</code> <code>order</code> String Sort order (asc or desc). Default varies by endpoint. <code>?sort=name&amp;order=asc</code>"},{"location":"reference/query-parameters/#examples","title":"Examples","text":""},{"location":"reference/query-parameters/#fetching-a-specific-page-of-teams-with-increased-limit","title":"Fetching a Specific Page of Teams with Increased Limit","text":"<pre><code>GET https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams?limit=50&amp;page=2\n</code></pre>"},{"location":"reference/query-parameters/#getting-events-for-a-specific-date-range","title":"Getting Events for a Specific Date Range","text":"<pre><code>GET https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events?dateRange=20250301-20250315\n</code></pre>"},{"location":"reference/query-parameters/#getting-regular-season-standings-for-a-conference","title":"Getting Regular Season Standings for a Conference","text":"<pre><code>GET https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/types/2/groups/1/standings\n</code></pre>"},{"location":"reference/query-parameters/#getting-team-schedule","title":"Getting Team Schedule","text":"<pre><code>GET https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/seasons/2025/teams/52/events?seasontype=2\n</code></pre>"},{"location":"reference/query-parameters/#parameter-combinations","title":"Parameter Combinations","text":"<p>Parameters can be combined to create more specific queries. For example:</p> <pre><code>GET https://sports.core.api.espn.com/v2/sports/basketball/leagues/mens-college-basketball/events?dates=20250301&amp;groups=1&amp;limit=100\n</code></pre> <p>This would retrieve up to 100 events on March 1, 2025, involving teams from group ID 1.</p>"},{"location":"reference/query-parameters/#notes-on-usage","title":"Notes on Usage","text":"<ul> <li>Not all parameters are supported by every endpoint. Consult the specific endpoint documentation for supported parameters.</li> <li>Some parameters may have different effects depending on the endpoint.</li> <li>Invalid parameter values typically result in a 400 Bad Request response.</li> <li>Parameter names are case-sensitive.</li> <li>Boolean parameters accept <code>true</code> or <code>false</code> values (lowercase). </li> </ul>"},{"location":"reference/status-codes/","title":"Response Status Codes","text":"<p>The ESPN API returns standard HTTP status codes to indicate the success or failure of API requests.</p>"},{"location":"reference/status-codes/#success-codes","title":"Success Codes","text":"Code Status Description 200 OK The request was successful. This is the most common success response for GET requests. 201 Created The request was successful and a new resource was created. This is typically used for POST requests. 204 No Content The request was successful but there is no content to return. Often used for DELETE operations."},{"location":"reference/status-codes/#client-error-codes","title":"Client Error Codes","text":"Code Status Description 400 Bad Request The request was malformed or contains invalid parameters. Check the request syntax and parameters. 401 Unauthorized Authentication is required. This typically means that you need to include valid credentials. 403 Forbidden The server understood the request but refuses to authorize it. This typically means you don't have permission to access the requested resource. 404 Not Found The requested resource does not exist. This could be due to an incorrect URL or a resource that has been removed. 429 Too Many Requests Rate limit has been exceeded. The API limits the number of requests that can be made in a given time period."},{"location":"reference/status-codes/#server-error-codes","title":"Server Error Codes","text":"Code Status Description 500 Internal Server Error An unexpected error occurred on the server. If this persists, contact ESPN API support. 502 Bad Gateway The server received an invalid response from an upstream server. 503 Service Unavailable The server is currently unable to handle the request due to temporary overloading or maintenance. 504 Gateway Timeout The server did not receive a timely response from an upstream server."},{"location":"reference/status-codes/#error-response-format","title":"Error Response Format","text":"<p>When the API returns an error response, it typically includes a JSON body with additional details about the error:</p> <pre><code>{\n  \"status\": 400,\n  \"message\": \"Invalid parameter: 'date' must be in YYYYMMDD format\",\n  \"code\": \"INVALID_PARAMETER\",\n  \"detail\": \"The date parameter '20240101' is not in the correct format. Use 'YYYYMMDD' format (e.g., '20240101').\"\n}\n</code></pre>"},{"location":"reference/status-codes/#common-error-fields","title":"Common Error Fields","text":"Field Description <code>status</code> The HTTP status code associated with the error. <code>message</code> A brief description of the error that occurred. <code>code</code> A unique code that identifies the specific error type. <code>detail</code> A more detailed explanation of the error, often including suggestions for resolving the issue."},{"location":"reference/status-codes/#error-handling-best-practices","title":"Error Handling Best Practices","text":"<p>When working with the ESPN API, consider these error handling best practices:</p> <ol> <li>Handle Rate Limiting: Implement exponential backoff when receiving 429 errors.</li> <li>Graceful Degradation: Design your application to handle temporary service disruptions (503 errors).</li> <li>Validate Input Parameters: Verify that your request parameters are correctly formatted to avoid 400 errors.</li> <li>Check Resource Existence: Implement fallback behavior when resources are not found (404 errors).</li> <li>Log Errors: Maintain detailed logs of API errors to help diagnose issues.</li> </ol>"},{"location":"reference/status-codes/#example-error-scenarios","title":"Example Error Scenarios","text":""},{"location":"reference/status-codes/#invalid-date-format","title":"Invalid Date Format","text":"<pre><code>GET /v2/sports/basketball/leagues/mens-college-basketball/events?dates=01-01-2024\n</code></pre> <pre><code>{\n  \"status\": 400,\n  \"message\": \"Invalid date format\",\n  \"code\": \"INVALID_DATE_FORMAT\",\n  \"detail\": \"The 'dates' parameter must be in YYYYMMDD format (e.g., 20240101)\"\n}\n</code></pre>"},{"location":"reference/status-codes/#resource-not-found","title":"Resource Not Found","text":"<pre><code>GET /v2/sports/basketball/leagues/mens-college-basketball/teams/999999\n</code></pre> <pre><code>{\n  \"status\": 404,\n  \"message\": \"Team not found\",\n  \"code\": \"RESOURCE_NOT_FOUND\",\n  \"detail\": \"The requested team with ID '999999' does not exist\"\n}\n</code></pre>"},{"location":"reference/status-codes/#rate-limit-exceeded","title":"Rate Limit Exceeded","text":"<pre><code>{\n  \"status\": 429,\n  \"message\": \"Rate limit exceeded\",\n  \"code\": \"RATE_LIMIT_EXCEEDED\",\n  \"detail\": \"You have exceeded the rate limit of 100 requests per minute. Please wait and try again later.\"\n}\n</code></pre>"}]}